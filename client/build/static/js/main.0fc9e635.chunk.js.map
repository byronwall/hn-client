{"version":3,"sources":["LocalStorageWrapper.tsx","DataLayer.tsx","Header.tsx","getDomain.tsx","timeSince.tsx","HnListItem.tsx","App.tsx","HnStoryList.tsx","HnComment.tsx","HnStoryPage.tsx","serviceWorker.ts","index.tsx"],"names":["LocalStorageWrapper","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","item","undefined","inherits","createClass","key","value","_this2","itemCompressed","localStorage","getItem","storageName","LZString","decompress","removeItem","setState","dataDidUpdate","obj","JSON","parse","prevProps","prevState","_this3","_","isEqual","activeItem","console","log","strToStore","stringify","strToStoreCompressed","compress","setItem","React","Component","DataLayer","dayItems","frontItems","monthItems","weekItems","activeList","react_default","a","createElement","Fragment","LocalStorageWrapper_LocalStorageWrapper","updateNewItems","HnListSource","Front","Day","Week","Month","id","find","c","page","length","loadData","_loadData","asyncToGenerator","regenerator_default","mark","_callee","url","response","data","wrap","_context","prev","next","t0","abrupt","fetch","sent","ok","error","json","stop","_x","apply","arguments","listType","provideNewItems","Header","_React$PureComponent","Navbar","Brand","NavLink","to","Nav","lib","NavItem","eventKey","Form","pullRight","Button","bsStyle","onClick","requestNewData","Glyphicon","glyph","PureComponent","getDomain","matches","match","timeSince","date","seconds","Math","floor","Date","getTime","interval","HnListItem","story","href","title","score","Link","descendants","time","HnStoryList","items","map","HnListItem_HnListItem","HnComment","isOpen","childComments","comment","kidsObj","commentText","text","childrenToShow","dangerouslySetInnerHTML","__html","childComm","depth","card","interactive","e","handleCardClick","style","paddingLeft","width","by","stopPropagation","HnStoryPage","comments","HnComment_HnComment","window","scrollTo","_App","allItems","dataLayer","createRef","updateActiveDataStore","bind","assertThisInitialized","newItemsProvided","params","objectSpread","isActive","cloneDeep","concat","uniqBy","DataLayer_DataLayer","ref","Header_Header","current","Switch","es_Route","path","exact","render","HnStoryPage_HnStoryPage","getStoryData","HnStoryList_HnStoryList","getPageData","App","withRouter","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","Sentry","dsn","ReactDOM","BrowserRouter","Route","src_App_App","document","getElementById","URL","process","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0fc9e635.chunk.js","sourcesContent":["import _ from \"lodash\";\nimport React from \"react\";\nimport LZString from \"lz-string\";\n\nexport interface LocalStorageWrapperProps<TDataType> {\n  storageName: string;\n  activeItem: TDataType;\n\n  dataDidUpdate(item: TDataType | undefined): void;\n}\n\nexport interface LocalStorageWrapperState<TDataType> {\n  item: TDataType | undefined;\n}\n\nexport class LocalStorageWrapper<TDataType> extends React.Component<\n  LocalStorageWrapperProps<TDataType>,\n  LocalStorageWrapperState<TDataType>\n> {\n  constructor(props: LocalStorageWrapperProps<TDataType>) {\n    super(props);\n    this.state = {\n      item: undefined\n    };\n  }\n  render() {\n    return null;\n  }\n  componentDidMount() {\n    // check localStorage for obj\n    const itemCompressed = localStorage.getItem(this.props.storageName);\n    // decompress\n    if (itemCompressed === undefined || itemCompressed === null) {\n      this.setState({ item: undefined }, () =>\n        this.props.dataDidUpdate(undefined)\n      );\n      return;\n    }\n    const item = LZString.decompress(itemCompressed);\n    // seems to be some sort of corruption on load.. clear localStorage\n    if (item === null) {\n      localStorage.removeItem(this.props.storageName);\n      this.setState({ item: undefined }, () =>\n        this.props.dataDidUpdate(undefined)\n      );\n      return;\n    }\n    // parse JSON for what was found\n    const obj = JSON.parse(item) as TDataType;\n    this.setState({ item: obj }, () => this.props.dataDidUpdate(obj));\n  }\n  componentDidUpdate(\n    prevProps: LocalStorageWrapperProps<TDataType>,\n    prevState: LocalStorageWrapperState<TDataType>\n  ) {\n    // if activeItem changed... save to local storage.. update self\n    if (!_.isEqual(prevProps.activeItem, this.props.activeItem)) {\n      // do a check for undefined and kick out?\n      if (this.props.activeItem === undefined) {\n        return;\n      }\n      // TODO: this save should only happen when the data is new\n      if (_.isEqual(this.state.item, this.props.activeItem)) {\n        // do not need to save or update... it is the same as current state\n        // happens when loaded\n        return;\n      }\n      console.log(\"save item\", this.props.activeItem);\n      // compress and save\n      const strToStore = JSON.stringify(this.props.activeItem);\n      const strToStoreCompressed = LZString.compress(strToStore);\n      localStorage.setItem(this.props.storageName, strToStoreCompressed);\n      this.setState({ item: this.props.activeItem }, () =>\n        this.props.dataDidUpdate(this.props.activeItem)\n      );\n    }\n  }\n}\n","import React from \"react\";\n\nimport { HnListSource } from \"./App\";\nimport { LocalStorageWrapper } from \"./LocalStorageWrapper\";\n\ninterface DataLayerState {\n  frontItems: HnItem[];\n\n  dayItems: HnItem[];\n\n  weekItems: HnItem[];\n\n  monthItems: HnItem[];\n}\n\ninterface DataLayerProps {\n  provideNewItems(items: HnItem[], listType: HnListSource): void;\n}\n\nexport class DataLayer extends React.Component<DataLayerProps, DataLayerState> {\n  refreshData(activeList: HnListSource): void {}\n  constructor(props: DataLayerProps) {\n    super(props);\n\n    this.state = {\n      dayItems: [],\n      frontItems: [],\n      monthItems: [],\n      weekItems: []\n    };\n  }\n\n  render() {\n    // TODO: generalize the comps and events for the data type (don't duplicate)\n    return (\n      <React.Fragment>\n        <LocalStorageWrapper<HnItem[]>\n          dataDidUpdate={item => this.updateNewItems(item, HnListSource.Front)}\n          activeItem={this.state.frontItems}\n          storageName=\"HN-ITEMS\"\n        />\n\n        <LocalStorageWrapper<HnItem[]>\n          dataDidUpdate={item => this.updateNewItems(item, HnListSource.Day)}\n          activeItem={this.state.dayItems}\n          storageName=\"HN-DAY-ITEMS\"\n        />\n\n        <LocalStorageWrapper<HnItem[]>\n          dataDidUpdate={item => this.updateNewItems(item, HnListSource.Week)}\n          activeItem={this.state.weekItems}\n          storageName=\"HN-WEEK-ITEMS\"\n        />\n\n        <LocalStorageWrapper<HnItem[]>\n          dataDidUpdate={item => this.updateNewItems(item, HnListSource.Month)}\n          activeItem={this.state.monthItems}\n          storageName=\"HN-MONTH-ITEMS\"\n        />\n      </React.Fragment>\n    );\n  }\n\n  getStoryData(id: number) {\n    let item = this.state.frontItems.find(c => c.id === id);\n    if (item !== undefined) {\n      return item;\n    }\n\n    item = this.state.dayItems.find(c => c.id === id);\n    if (item !== undefined) {\n      return item;\n    }\n\n    item = this.state.weekItems.find(c => c.id === id);\n    if (item !== undefined) {\n      return item;\n    }\n\n    item = this.state.monthItems.find(c => c.id === id);\n    if (item !== undefined) {\n      return item;\n    }\n\n    return undefined;\n  }\n\n  getPageData(page: string | undefined) {\n    // TODO: add loading step if data is missing -- figure out how to trigger refresh\n    console.log(\"getpage state\", this.state);\n    switch (page) {\n      case \"day\":\n        if (this.state.dayItems.length === 0) {\n          this.loadData(HnListSource.Day);\n        }\n        return this.state.dayItems || [];\n      case \"week\":\n        if (this.state.weekItems.length === 0) {\n          this.loadData(HnListSource.Week);\n        }\n        return this.state.weekItems || [];\n      case \"month\":\n        if (this.state.monthItems.length === 0) {\n          this.loadData(HnListSource.Month);\n        }\n        return this.state.monthItems || [];\n      default:\n        if (this.state.frontItems.length === 0) {\n          this.loadData(HnListSource.Front);\n        }\n        return this.state.frontItems || [];\n    }\n  }\n\n  public async loadData(activeList: HnListSource) {\n    console.log(\"loading data\");\n    let url = \"\";\n    switch (activeList) {\n      case HnListSource.Front:\n        url = \"/topstories/topstories\";\n        break;\n      case HnListSource.Day:\n        url = \"/topstories/day\";\n        break;\n      case HnListSource.Week:\n        url = \"/topstories/week\";\n        break;\n      case HnListSource.Month:\n        url = \"/topstories/month\";\n        break;\n    }\n    const response = await fetch(url);\n    if (!response.ok) {\n      console.error(response);\n      return;\n    }\n    const data: HnItem[] = await response.json();\n\n    // TODO: do not reload data on mount... use a button\n\n    // TODO: take that list of items and set it equal to the current list\n    // TODO: update the items with a merge of sorts instead of overwriting\n\n    console.log(\"hn items\", data);\n\n    this.updateNewItems(data, activeList);\n  }\n\n  updateNewItems(data: HnItem[] | undefined, listType: HnListSource): void {\n    console.log(\"new items2\", data, listType);\n\n    if (data === undefined) {\n      data = [];\n    }\n\n    switch (listType) {\n      case HnListSource.Front:\n        this.setState({ frontItems: data });\n        break;\n      case HnListSource.Day:\n        this.setState({ dayItems: data });\n        break;\n      case HnListSource.Week:\n        this.setState({ weekItems: data });\n        break;\n      case HnListSource.Month:\n        this.setState({ monthItems: data });\n        break;\n    }\n\n    this.props.provideNewItems(data, listType);\n  }\n}\n","import React from \"react\";\nimport { Nav, Navbar, NavItem, Button, Glyphicon } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\n\ninterface HeaderProps {\n  requestNewData(): void;\n}\n\nexport class Header extends React.PureComponent<HeaderProps> {\n  render() {\n    return (\n      <Navbar>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <NavLink to=\"/\">hn-offline</NavLink>\n          </Navbar.Brand>\n        </Navbar.Header>\n        <Nav>\n          <LinkContainer to=\"/day\">\n            <NavItem eventKey={1}>day</NavItem>\n          </LinkContainer>\n\n          <LinkContainer to=\"/week\">\n            <NavItem eventKey={2}>week</NavItem>\n          </LinkContainer>\n\n          <LinkContainer to=\"/month\">\n            <NavItem eventKey={3}>month</NavItem>\n          </LinkContainer>\n        </Nav>\n\n        <Navbar.Form pullRight>\n          <Button bsStyle=\"primary\" onClick={() => this.props.requestNewData()}>\n            <Glyphicon glyph=\"refresh\" />\n          </Button>\n        </Navbar.Form>\n      </Navbar>\n    );\n  }\n}\n","export function getDomain(url: string | undefined) {\n  if (url === undefined) {\n    return \"\";\n  }\n  var matches = url.match(/^https?\\:\\/\\/([^\\/?#]+)(?:[\\/?#]|$)/i);\n  var domain = matches && matches[1];\n  return domain;\n}\n","export function timeSince(date: number) {\n  var seconds = Math.floor(new Date().getTime() / 1000 - date);\n  var interval = Math.floor(seconds / 31536000);\n  if (interval > 1) {\n    return interval + \" years\";\n  }\n  interval = Math.floor(seconds / 2592000);\n  if (interval > 1) {\n    return interval + \" months\";\n  }\n  interval = Math.floor(seconds / 86400);\n  if (interval > 1) {\n    return interval + \" days\";\n  }\n  interval = Math.floor(seconds / 3600);\n  if (interval > 1) {\n    return interval + \" hours\";\n  }\n  interval = Math.floor(seconds / 60);\n  if (interval > 1) {\n    return interval + \" minutes\";\n  }\n  return Math.floor(seconds) + \" seconds\";\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { getDomain } from \"./getDomain\";\nimport { timeSince } from \"./timeSince\";\nimport { Glyphicon } from \"react-bootstrap\";\n\nexport interface HnStoryProps {\n  data: HnItem;\n}\n\nexport class HnListItem extends React.Component<HnStoryProps> {\n  render() {\n    const story = this.props.data;\n    return (\n      <div>\n        <p>\n          <a href={story.url}>{story.title}</a>\n        </p>\n        <p>\n          <span>{story.score + \" | \"}</span>\n          <Link to={\"/story/\" + story.id}>\n            <span>\n              <Glyphicon glyph=\"comment\" /> {\" \" + story.descendants}\n            </span>\n          </Link>\n          <span>{\" | \" + timeSince(story.time) + \" ago\"}</span>\n          <span>{\" | \" + getDomain(story.url)}</span>\n        </p>\n      </div>\n    );\n  }\n}\n","import \"./App.css\";\n\nimport _ from \"lodash\";\nimport React, { RefObject } from \"react\";\nimport { Route, RouteComponentProps, Switch, withRouter } from \"react-router\";\n\nimport { DataLayer } from \"./DataLayer\";\nimport { Header } from \"./Header\";\nimport { HnStoryList } from \"./HnStoryList\";\nimport { HnStoryPage } from \"./HnStoryPage\";\n\ninterface StoryPageProps extends RouteComponentProps<{ id: string }> {}\ninterface AppPageProps extends RouteComponentProps<{ page?: string }> {}\n\nclass _App extends React.Component<AppPageProps, AppState> {\n  dataLayer: RefObject<DataLayer>;\n\n  static getDerivedStateFromProps(props: AppPageProps, state: AppState) {\n    let listType: HnListSource;\n    switch (props.match.params.page) {\n      case \"day\":\n        listType = HnListSource.Day;\n        break;\n\n      case \"week\":\n        listType = HnListSource.Week;\n        break;\n\n      case \"month\":\n        listType = HnListSource.Month;\n        break;\n\n      default:\n        listType = HnListSource.Front;\n        break;\n    }\n\n    console.log(\"derived state\", props.match.params.page, listType);\n\n    return { ...state, activeList: listType };\n  }\n\n  constructor(props: AppPageProps) {\n    super(props);\n\n    this.state = {\n      items: [],\n      allItems: [],\n      activeList: HnListSource.Front\n    };\n\n    this.dataLayer = React.createRef();\n\n    this.updateActiveDataStore = this.updateActiveDataStore.bind(this);\n    this.newItemsProvided = this.newItemsProvided.bind(this);\n  }\n\n  updateActiveDataStore(items: HnItem[], isActive: boolean) {\n    if (isActive) {\n      this.setState({ items });\n    }\n\n    // this is needed to ensure that state updates are atomic\n    // all new items need to be joined together... cannot skip updatesÍ\n    this.setState(prevState => {\n      let allItems = _.cloneDeep(prevState.allItems).concat(items);\n      allItems = _.uniqBy(allItems, c => c.id);\n      console.log(\"new all itemS\", allItems);\n      return { allItems };\n    });\n  }\n\n  render() {\n    console.log(\"render state\", this.state);\n    return (\n      <div>\n        <DataLayer\n          ref={this.dataLayer}\n          provideNewItems={this.newItemsProvided}\n        />\n\n        <Header\n          requestNewData={() => {\n            this.dataLayer.current!.loadData(this.state.activeList);\n          }}\n        />\n\n        <Switch>\n          <Route\n            path={\"/story/:id\"}\n            exact\n            render={(props: StoryPageProps) => (\n              <HnStoryPage\n                data={\n                  this.dataLayer.current === null\n                    ? undefined\n                    : this.dataLayer.current.getStoryData(\n                        +props.match.params.id\n                      )\n                }\n              />\n            )}\n          />\n          <Route\n            path=\"/:page?\"\n            render={(props: AppPageProps) => (\n              <HnStoryList\n                items={\n                  this.dataLayer.current === null\n                    ? []\n                    : this.dataLayer.current.getPageData(\n                        props.match.params.page\n                      )\n                }\n              />\n            )}\n          />\n        </Switch>\n      </div>\n    );\n  }\n  newItemsProvided(items: HnItem[], listType: HnListSource): void {\n    if (listType === this.state.activeList) {\n      this.setState({ items });\n    }\n  }\n}\n\nexport const App = withRouter(_App);\n\nexport enum HnListSource {\n  Front,\n  Day,\n  Week,\n  Month\n}\n\ninterface AppState {\n  items: HnItem[];\n  allItems: HnItem[];\n\n  activeList: HnListSource;\n}\n","import React from \"react\";\n\nimport { HnListItem } from \"./HnListItem\";\n\ninterface HnStoryListProps {\n  items: HnItem[];\n}\n\nexport class HnStoryList extends React.Component<HnStoryListProps> {\n  constructor(props: HnStoryListProps) {\n    super(props);\n    this.state = {\n      items: []\n    };\n  }\n  render() {\n    return (\n      <div>\n        {this.props.items.map(item => (\n          <HnListItem data={item} key={item.id} />\n        ))}\n      </div>\n    );\n  }\n}\n","import { Card } from \"@blueprintjs/core\";\nimport React from \"react\";\nimport { timeSince } from \"./timeSince\";\n\nexport interface HnCommentProps {\n  comment: KidsObj3;\n  depth: number;\n}\n\ninterface HnCommentState {\n  isOpen: boolean;\n}\n\nexport class HnComment extends React.Component<HnCommentProps, HnCommentState> {\n  constructor(props: HnCommentProps) {\n    super(props);\n\n    this.state = {\n      isOpen: true\n    };\n  }\n\n  render() {\n    const childComments = this.props.comment.kidsObj || [];\n    const commentText = this.props.comment.text || \"\";\n\n    // TODO: rewrite links to hn to open in this site instead\n\n    const childrenToShow = !this.state.isOpen ? null : (\n      <React.Fragment>\n        <p dangerouslySetInnerHTML={{ __html: commentText }} />\n\n        {childComments.map(childComm => (\n          <HnComment\n            key={this.props.comment.id + \"-\" + childComm.id}\n            comment={childComm}\n            depth={this.props.depth + 1}\n          />\n        ))}\n      </React.Fragment>\n    );\n\n    return (\n      <Card\n        interactive\n        onClick={e => this.handleCardClick(e)}\n        style={{\n          paddingLeft: 12,\n          width: \"100%\"\n        }}\n      >\n        <p>\n          {this.props.comment.by}\n          {\" | \"}\n          {timeSince(this.props.comment.time)}\n          {\" ago\"}\n        </p>\n\n        {childrenToShow}\n      </Card>\n    );\n  }\n  handleCardClick(e: React.MouseEvent<HTMLDivElement>): void {\n    // this is to prevent other cards from collapsing too\n    e.stopPropagation();\n\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n}\n","import React from \"react\";\nimport { HnComment } from \"./HnComment\";\nimport { timeSince } from \"./timeSince\";\nimport { getDomain } from \"./getDomain\";\n\nexport interface HnStoryPageProps {\n  data: HnItem | undefined;\n}\n\nexport class HnStoryPage extends React.Component<HnStoryPageProps> {\n  render() {\n    if (this.props.data === undefined) {\n      return null;\n    }\n    const comments = this.props.data.kidsObj || [];\n    return (\n      <div>\n        <h2>\n          <a href={this.props.data.url}>{this.props.data.title}</a>\n        </h2>\n        <h4>\n          <span>{this.props.data.by}</span>\n          <span>{\" | \"}</span>\n          <span>{this.props.data.score}</span>\n          <span>{\" | \"}</span>\n          <span>{timeSince(this.props.data.time)} ago</span>\n          <span>{\" | \"}</span>\n          <span>{getDomain(this.props.data.url)}</span>\n        </h4>\n\n        {this.props.data.text !== undefined && (\n          <p dangerouslySetInnerHTML={{ __html: this.props.data.text }} />\n        )}\n\n        {comments.map(comment => (\n          <HnComment key={comment.id} comment={comment} depth={0} />\n        ))}\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap-theme.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport * as Sentry from \"@sentry/browser\";\n\nSentry.init({\n  dsn: \"https://d8e8092157294c86b5014343cede60e6@sentry.io/1362584\"\n});\n\nReactDOM.render(\n  <BrowserRouter>\n    <Route path={\"/:page?\"}>\n      <App />\n    </Route>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}