{"version":3,"sources":["LocalStorageWrapper.tsx","DataLayer.tsx","Header.tsx","getDomain.tsx","timeSince.tsx","HnListItem.tsx","HnStoryList.tsx","HnCommentList.tsx","HnComment.tsx","HnStoryPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LocalStorageWrapper","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","item","undefined","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","itemCompressed","obj","_this2","wrap","_context","prev","next","localForage","getItem","storageName","sent","setState","dataDidUpdate","abrupt","LZString","decompress","removeItem","JSON","parse","stop","apply","arguments","prevProps","prevState","_this3","_","isEqual","activeItem","console","log","strToStore","stringify","strToStoreCompressed","compress","setItem","React","Component","DataLayer","allItems","currentLists","isLoadingFresh","activeList","react_default","createElement","Fragment","LocalStorageWrapper_LocalStorageWrapper","processDataFromLocalStorage","_getStoryData","id","find","c","getStoryFromServer","_x","_getStoryFromServer","_callee2","url","response","data","_context2","fetch","ok","error","json","_x2","page","source","day","HnListSource","Day","week","Week","month","Month","front","Front","idsToLoad","loadData","stories","map","filter","_loadData","_callee3","_context3","t0","sortBy","score","updateNewItems","_x3","allLists","_this4","forEach","list","items","provideNewItems","listType","_this5","newList","newDataList","cloneDeep","listToUpdate","push","newAllItems","storiesToReturn","newStory","existingStoryIndex","findIndex","existingStory","lastUpdated","Header","_React$PureComponent","Navbar","Brand","NavLink","to","Nav","lib","NavItem","eventKey","Route","render","_ref","location","pathname","indexOf","Form","pullRight","Button","bsStyle","onClick","requestNewData","Glyphicon","glyph","PureComponent","getDomain","matches","match","timeSince","date","seconds","Math","floor","Date","getTime","interval","HnListItem","story","commentCount","Link","descendants","storyLinkEl","title","href","time","HnStoryList","HnListItem_HnListItem","HnCommentList","childRefs","childComments","createRef","validChildren","comm","childComm","index","HnComment_HnComment","comment","depth","canExpand","ref","scrollToNextChild","nextSib","meEl","divToScroll","current","getDivRef","actions","computeScrollIntoView","block","inline","scrollMode","divToScrollMe","actionsMe","length","window","scrollTo","top","offsetTop","behavior","colors","HnComment","isOpen","expandSelf","divRef","kidsObj","isValidComment","commentText","text","childrenToShow","className","dangerouslySetInnerHTML","__html","HnCommentList_HnCommentList","borderColor","classNames","collapsed","e","handleCardClick","style","paddingLeft","marginLeft","borderLeftColor","borderLeftWidth","borderRight","paddingRight","fontWeight","by","stopPropagation","target","tagName","gutterRatio","pageX","offsetLeft","innerWidth","deleted","HnStoryPage","anchorClickHandler","bind","assertThisInitialized","storyData","comments","overflowWrap","updateDataFromDataLayer","document","body","addEventListener","removeEventListener","history","preventDefault","_updateDataFromDataLayer","getStoryData","dataLayer","_App","updateActiveDataStore","newItemsProvided","params","objectSpread","isActive","concat","uniqBy","DataLayer_DataLayer","Header_Header","Switch","es_Route","path","exact","HnStoryPage_HnStoryPage","HnStoryList_HnStoryList","getPageData","App","withRouter","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","smoothscroll","polyfill","Sentry","dsn","onerror","msg","lineNo","columnNo","clear","innerHTML","ReactDOM","BrowserRouter","src_App_App","getElementById","URL","process","origin","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5a6382cc.chunk.js","sourcesContent":["import localForage from \"localforage\";\nimport _ from \"lodash\";\nimport LZString from \"lz-string\";\nimport React from \"react\";\n\nexport interface LocalStorageWrapperProps<TDataType> {\n  storageName: string;\n  activeItem: TDataType;\n\n  dataDidUpdate(item: TDataType | undefined): void;\n}\n\nexport interface LocalStorageWrapperState<TDataType> {\n  item: TDataType | undefined;\n}\n\nexport class LocalStorageWrapper<TDataType> extends React.Component<\n  LocalStorageWrapperProps<TDataType>,\n  LocalStorageWrapperState<TDataType>\n> {\n  constructor(props: LocalStorageWrapperProps<TDataType>) {\n    super(props);\n    this.state = {\n      item: undefined\n    };\n  }\n  render() {\n    return null;\n  }\n  async componentDidMount() {\n    // check localStorage for obj\n    const itemCompressed = await localForage.getItem<string>(\n      this.props.storageName\n    );\n    // decompress\n    if (itemCompressed === undefined || itemCompressed === null) {\n      this.setState({ item: undefined }, () =>\n        this.props.dataDidUpdate(undefined)\n      );\n      return;\n    }\n    const item = LZString.decompress(itemCompressed);\n    // seems to be some sort of corruption on load.. clear localStorage\n    if (item === null) {\n      localForage.removeItem(this.props.storageName);\n      this.setState({ item: undefined }, () =>\n        this.props.dataDidUpdate(undefined)\n      );\n      return;\n    }\n    // parse JSON for what was found\n    const obj = JSON.parse(item) as TDataType;\n    this.setState({ item: obj }, () => this.props.dataDidUpdate(obj));\n  }\n  componentDidUpdate(\n    prevProps: LocalStorageWrapperProps<TDataType>,\n    prevState: LocalStorageWrapperState<TDataType>\n  ) {\n    // if activeItem changed... save to local storage.. update self\n    if (!_.isEqual(prevProps.activeItem, this.props.activeItem)) {\n      // do a check for undefined and kick out?\n      if (this.props.activeItem === undefined) {\n        return;\n      }\n      // TODO: this save should only happen when the data is new\n      if (_.isEqual(this.state.item, this.props.activeItem)) {\n        // do not need to save or update... it is the same as current state\n        // happens when loaded\n        return;\n      }\n      console.log(\"save item\", this.props.activeItem);\n      // compress and save\n      const strToStore = JSON.stringify(this.props.activeItem);\n      const strToStoreCompressed = LZString.compress(strToStore);\n      localForage.setItem(this.props.storageName, strToStoreCompressed);\n      this.setState({ item: this.props.activeItem }, () => {\n        console.log(\"updating data after a save?\");\n        this.props.dataDidUpdate(this.props.activeItem);\n      });\n    }\n  }\n}\n","import _ from \"lodash\";\nimport React from \"react\";\n\nimport { HnListSource } from \"./App\";\nimport { LocalStorageWrapper } from \"./LocalStorageWrapper\";\n\ninterface DataLayerState {\n  allItems: HnItem[];\n  currentLists: DataList[];\n\n  isLoadingFresh: boolean;\n}\n\nexport interface DataList {\n  key: HnListSource;\n  stories: number[]; // will be an array of IDs\n}\n\ninterface DataLayerProps {\n  provideNewItems(items: HnItem[], listType: HnListSource): void;\n}\n\nexport class DataLayer extends React.Component<DataLayerProps, DataLayerState> {\n  refreshData(activeList: HnListSource): void {}\n  constructor(props: DataLayerProps) {\n    super(props);\n\n    this.state = {\n      allItems: [],\n      currentLists: [],\n      isLoadingFresh: false\n    };\n  }\n\n  render() {\n    // TODO: generalize the comps and events for the data type (don't duplicate)\n    return (\n      <React.Fragment>\n        <LocalStorageWrapper<HnItem[]>\n          dataDidUpdate={allItems =>\n            this.processDataFromLocalStorage(allItems, this.state.currentLists)\n          }\n          activeItem={this.state.allItems}\n          storageName=\"HN-ALL-ITEMS\"\n        />\n\n        <LocalStorageWrapper<DataList[]>\n          dataDidUpdate={currentLists =>\n            this.processDataFromLocalStorage(this.state.allItems, currentLists)\n          }\n          activeItem={this.state.currentLists}\n          storageName=\"HN-DATA-LISTS\"\n        />\n      </React.Fragment>\n    );\n  }\n\n  async getStoryData(id: number) {\n    let item = this.state.allItems.find(c => c.id === id);\n    if (item !== undefined) {\n      return item;\n    }\n\n    // hit the API for the story data\n    return await this.getStoryFromServer(id);\n  }\n\n  public async getStoryFromServer(id: number) {\n    let url = \"/api/story/\" + id;\n\n    const response = await fetch(url);\n    if (!response.ok) {\n      console.error(response);\n      return undefined;\n    }\n    const data: HnItem | { error: string } = await response.json();\n\n    if (\"error\" in data) {\n      console.error(data);\n      return undefined;\n    }\n\n    console.log(\"hn item from server\", data);\n\n    return data;\n  }\n\n  getPageData(page: string | undefined) {\n    // TODO: add loading step if data is missing -- figure out how to trigger refresh\n\n    console.log(\"getpagedata\", page, this.state);\n\n    if (page === \"\" || page === undefined) {\n      page = \"front\";\n    }\n\n    const pageToSourceMapping: { [key: string]: HnListSource } = {\n      day: HnListSource.Day,\n      week: HnListSource.Week,\n      month: HnListSource.Month,\n      front: HnListSource.Front\n    };\n\n    const source = pageToSourceMapping[page];\n\n    if (source === undefined) {\n      console.error(\"unknown page -> source map\");\n      return [];\n    }\n\n    const idsToLoad = this.state.currentLists.find(c => c.key === source);\n\n    if (idsToLoad === undefined) {\n      // TODO: this needs to fire off an update\n      console.log(\"no ids to load...\");\n      this.loadData(source);\n      return [];\n    }\n\n    const dataOut = idsToLoad.stories\n      .map(id => this.state.allItems.find(c => c.id === id))\n      .filter(c => c !== undefined) as HnItem[];\n\n    return dataOut;\n  }\n\n  public async loadData(activeList: HnListSource) {\n    console.log(\"loading data\");\n    let url = \"\";\n    switch (activeList) {\n      case HnListSource.Front:\n        url = \"/topstories/topstories\";\n        break;\n      case HnListSource.Day:\n        url = \"/topstories/day\";\n        break;\n      case HnListSource.Week:\n        url = \"/topstories/week\";\n        break;\n      case HnListSource.Month:\n        url = \"/topstories/month\";\n        break;\n    }\n    const response = await fetch(url);\n    if (!response.ok) {\n      console.error(response);\n      return;\n    }\n    let data: HnItem[] = await response.json();\n\n    if (activeList !== HnListSource.Front) {\n      // flip score to get descending\n      data = _.sortBy<HnItem>(data, c => -c.score);\n    }\n\n    // TODO: do not reload data on mount... use a button\n\n    // TODO: take that list of items and set it equal to the current list\n    // TODO: update the items with a merge of sorts instead of overwriting\n\n    console.log(\"hn items from server\", data);\n\n    this.updateNewItems(data, activeList);\n  }\n\n  processDataFromLocalStorage(\n    allItems: HnItem[] | undefined,\n    allLists: DataList[] | undefined\n  ) {\n    // all items come through\n    // the lists come through also\n\n    console.log(\"fresh data from local storage\", allItems, allLists);\n\n    // these state updates ensure that the data is available for next pass\n    if (allItems !== undefined) {\n      this.setState({ allItems });\n    }\n\n    if (allLists !== undefined) {\n      this.setState({ currentLists: allLists });\n    }\n\n    if (allItems === undefined || allLists === undefined) {\n      if (!this.state.isLoadingFresh) {\n        this.loadData(HnListSource.Front);\n        this.setState({ isLoadingFresh: true });\n      }\n      return;\n    }\n\n    // iterate the lists\n\n    allLists.forEach(list => {\n      const items = list.stories\n        .map(id => allItems.find(c => c.id === id))\n        .filter(c => c !== undefined) as HnItem[];\n\n      this.props.provideNewItems(items, list.key);\n    });\n\n    // send out update caommands to each one\n  }\n\n  updateNewItems(data: HnItem[] | undefined, listType: HnListSource): void {\n    console.log(\"items coming from server\", data, listType);\n\n    if (data === undefined) {\n      data = [];\n    }\n\n    // replace the list with the new IDs\n    const newList = data.map(c => c.id);\n\n    const newDataList = _.cloneDeep(this.state.currentLists);\n\n    let listToUpdate = newDataList.find(c => c.key === listType);\n\n    if (listToUpdate === undefined) {\n      newDataList.push({\n        key: listType,\n        stories: newList\n      });\n    } else {\n      listToUpdate.stories = newList;\n    }\n\n    // get all items... replace those whose data is newer in this version\n\n    const newAllItems = _.cloneDeep(this.state.allItems);\n\n    const storiesToReturn: HnItem[] = [];\n\n    data.forEach(newStory => {\n      const existingStoryIndex = newAllItems.findIndex(\n        c => c.id === newStory.id\n      );\n\n      // add the story if it is new\n      if (existingStoryIndex === -1) {\n        newAllItems.push(newStory);\n        storiesToReturn.push(newStory);\n        return;\n      }\n\n      // check the data if already found\n      const existingStory = newAllItems[existingStoryIndex];\n      if (existingStory.lastUpdated > newStory.lastUpdated) {\n        storiesToReturn.push(existingStory);\n        return;\n      }\n\n      newAllItems[existingStoryIndex] = newStory;\n      storiesToReturn.push(newStory);\n\n      // new story is actually newer... replace its data\n    });\n\n    // update otherwise\n\n    this.setState({ allItems: newAllItems, currentLists: newDataList }, () => {\n      this.props.provideNewItems(storiesToReturn, listType);\n    });\n  }\n}\n","import React from \"react\";\nimport { Button, Glyphicon, Nav, Navbar, NavItem } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { NavLink, Route } from \"react-router-dom\";\n\ninterface HeaderProps {\n  requestNewData(): void;\n}\n\nexport class Header extends React.PureComponent<HeaderProps> {\n  render() {\n    return (\n      <Navbar>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <NavLink to=\"/\">hn-offline</NavLink>\n          </Navbar.Brand>\n        </Navbar.Header>\n        <Nav>\n          <LinkContainer to=\"/day\">\n            <NavItem eventKey={1}>day</NavItem>\n          </LinkContainer>\n\n          <LinkContainer to=\"/week\">\n            <NavItem eventKey={2}>week</NavItem>\n          </LinkContainer>\n\n          <LinkContainer to=\"/month\">\n            <NavItem eventKey={3}>month</NavItem>\n          </LinkContainer>\n        </Nav>\n\n        <Route\n          render={({ location }) => {\n            return location.pathname.indexOf(\"/story\") === -1 ? (\n              <Navbar.Form pullRight>\n                <Button\n                  bsStyle=\"primary\"\n                  onClick={() => this.props.requestNewData()}\n                >\n                  <Glyphicon glyph=\"refresh\" />\n                </Button>\n              </Navbar.Form>\n            ) : null;\n          }}\n        />\n      </Navbar>\n    );\n  }\n}\n","export function getDomain(url: string | undefined) {\n  if (url === undefined) {\n    return \"\";\n  }\n  var matches = url.match(/^https?\\:\\/\\/([^\\/?#]+)(?:[\\/?#]|$)/i);\n  var domain = matches && matches[1];\n  return domain;\n}\n","export function timeSince(date: number) {\n  var seconds = Math.floor(new Date().getTime() / 1000 - date);\n  var interval = Math.floor(seconds / 31536000);\n  if (interval > 1) {\n    return interval + \" years\";\n  }\n  interval = Math.floor(seconds / 2592000);\n  if (interval > 1) {\n    return interval + \" months\";\n  }\n  interval = Math.floor(seconds / 86400);\n  if (interval > 1) {\n    return interval + \" days\";\n  }\n  interval = Math.floor(seconds / 3600);\n  if (interval >= 1) {\n    return interval + \" hour\" + (interval > 1 ? \"s\" : \"\");\n  }\n  interval = Math.floor(seconds / 60);\n  if (interval > 1) {\n    return interval + \" minutes\";\n  }\n  return Math.floor(seconds) + \" seconds\";\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { getDomain } from \"./getDomain\";\nimport { timeSince } from \"./timeSince\";\nimport { Glyphicon } from \"react-bootstrap\";\n\nexport interface HnStoryProps {\n  data: HnItem;\n}\n\nexport class HnListItem extends React.Component<HnStoryProps> {\n  render() {\n    const story = this.props.data;\n\n    const commentCount = (\n      <React.Fragment>\n        {\" | \"}\n        <Link to={\"/story/\" + story.id}>\n          <Glyphicon glyph=\"comment\" /> {story.descendants}\n        </Link>\n      </React.Fragment>\n    );\n\n    const storyLinkEl =\n      story.url === undefined ? (\n        <Link to={\"/story/\" + story.id}>{story.title}</Link>\n      ) : (\n        <a href={story.url}>{story.title}</a>\n      );\n\n    return (\n      <div>\n        <p>{storyLinkEl}</p>\n        <p>\n          <span>\n            <Glyphicon glyph=\"chevron-up\" /> {\" \" + story.score}\n          </span>\n          {story.descendants !== undefined && commentCount}\n          <span>{\" | \" + timeSince(story.time) + \" ago\"}</span>\n          <span>{\" | \" + getDomain(story.url)}</span>\n        </p>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport { HnListItem } from \"./HnListItem\";\n\ninterface HnStoryListProps {\n  items: HnItem[];\n}\n\nexport class HnStoryList extends React.Component<HnStoryListProps> {\n  constructor(props: HnStoryListProps) {\n    super(props);\n    this.state = {\n      items: []\n    };\n  }\n  render() {\n    return (\n      <div>\n        {this.props.items.map(item => (\n          <HnListItem data={item} key={item.id} />\n        ))}\n      </div>\n    );\n  }\n}\n","import computeScrollIntoView from \"compute-scroll-into-view\";\nimport _ from \"lodash\";\nimport React from \"react\";\n\nimport { HnComment } from \"./HnComment\";\n\ninterface HnCommentListProps {\n  childComments: Array<KidsObj3 | null>;\n  depth: number;\n  canExpand: boolean;\n}\n\nexport class HnCommentList extends React.Component<HnCommentListProps, {}> {\n  childRefs: Array<React.RefObject<HnComment>> = [];\n  constructor(props: HnCommentListProps) {\n    super(props);\n    props.childComments.forEach(item => {\n      if (item === null) {\n        return;\n      }\n      this.childRefs[item.id] = React.createRef();\n    });\n  }\n  render() {\n    const validChildren = this.props.childComments.filter(\n      comm => comm !== null\n    );\n    return (\n      <React.Fragment>\n        {validChildren.map((childComm, index) => (\n          <HnComment\n            key={childComm!.id}\n            comment={childComm}\n            depth={this.props.depth}\n            canExpand={this.props.canExpand}\n            ref={this.childRefs[childComm!.id]}\n            scrollToNextChild={() => {\n              // check if next is real\n              // HACK: nothing here is pretty... bouncing around refs to get the DIV to scroll to\n              // scroll to self if no siblings around\n              let nextSib = validChildren[index + 1];\n              const meEl = validChildren[index];\n\n              if (meEl === null) {\n                return;\n              }\n\n              if (nextSib === undefined || nextSib === null) {\n                nextSib = meEl;\n              }\n\n              const refObj = this.childRefs[nextSib.id].current!;\n              const divToScroll = refObj.getDivRef();\n\n              const actions = computeScrollIntoView(divToScroll, {\n                block: \"nearest\",\n                inline: \"nearest\",\n                scrollMode: \"if-needed\"\n              });\n\n              const refObjMe = this.childRefs[meEl.id].current!;\n              const divToScrollMe = refObjMe.getDivRef();\n\n              const actionsMe = computeScrollIntoView(divToScrollMe, {\n                block: \"nearest\",\n                inline: \"nearest\",\n                scrollMode: \"if-needed\"\n              });\n\n              if (actions.length == 0 && actionsMe.length == 0) {\n                return;\n              }\n\n              // the goal here is to determine if the next sibling or the collapsed header is hidden\n              // if either is not visible, it will scroll to the next sib (or collapsed if no sibs)\n\n              // TODO: consider if this 80 should be less if no siblings\n              window.scrollTo({\n                top: divToScroll.offsetTop - 80,\n                behavior: \"smooth\" // Optional, adds animation)\n              });\n            }}\n          />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { HnCommentList } from \"./HnCommentList\";\nimport { timeSince } from \"./timeSince\";\n\nexport interface HnCommentProps {\n  comment: KidsObj3 | null;\n  depth: number;\n\n  canExpand: boolean;\n\n  scrollToNextChild(): void;\n}\n\ninterface HnCommentState {\n  isOpen: boolean;\n  expandSelf: boolean;\n}\n\nconst colors = [\n  \"#bc8672\",\n  \"#c5be53\",\n  \"#d46850\",\n  \"#8c7f3b\",\n  \"#dec392\",\n  \"#c9893a\"\n];\n\nexport class HnComment extends React.Component<HnCommentProps, HnCommentState> {\n  divRef: React.RefObject<HTMLDivElement>;\n\n  static getDerivedStateFromProps(\n    props: HnCommentProps,\n    state: HnCommentState\n  ) {\n    // if a parent expands, collapse this one\n    if (!props.canExpand) {\n      return { isOpen: state.isOpen, expandSelf: false };\n    }\n\n    return null;\n  }\n\n  constructor(props: HnCommentProps) {\n    super(props);\n\n    this.state = {\n      isOpen: true,\n      expandSelf: false\n    };\n\n    this.divRef = React.createRef();\n  }\n\n  getDivRef() {\n    return this.divRef.current!;\n  }\n\n  render() {\n    const comment = this.props.comment;\n\n    if (comment === null) {\n      return null;\n    }\n\n    const childComments = (comment.kidsObj || []).filter(isValidComment);\n    const commentText = comment.text || \"\";\n\n    if (!isValidComment(comment)) {\n      // kick out nothing if the comment was deleted and has no children\n      return null;\n    }\n\n    // TODO: rewrite links to hn to open in this site instead\n\n    const childrenToShow = !this.state.isOpen ? null : (\n      <React.Fragment>\n        <p\n          className=\"comment\"\n          dangerouslySetInnerHTML={{ __html: commentText }}\n        />\n\n        {childComments.length > 0 && (\n          <HnCommentList\n            childComments={childComments}\n            canExpand={this.props.canExpand && !this.state.expandSelf}\n            depth={this.props.depth + 1}\n          />\n        )}\n      </React.Fragment>\n    );\n\n    const borderColor =\n      this.props.depth < colors.length ? colors[this.props.depth] : \"#bbb\";\n    return (\n      <div\n        className={classNames(\"bp3-card\", { collapsed: !this.state.isOpen })}\n        onClick={e => this.handleCardClick(e)}\n        style={{\n          paddingLeft: 12,\n          marginLeft:\n            this.state.expandSelf && this.state.isOpen\n              ? -15 * this.props.depth\n              : 0,\n\n          borderLeftColor: borderColor,\n\n          borderLeftWidth: this.state.expandSelf ? 6 : undefined,\n\n          borderRight: this.state.expandSelf\n            ? \"1px solid\" + borderColor\n            : undefined,\n          paddingRight: this.state.expandSelf ? 6 : undefined\n        }}\n      >\n        <p\n          style={{ fontWeight: this.state.isOpen ? 450 : 300 }}\n          ref={this.divRef}\n        >\n          {comment.by}\n          {\" | \"}\n          {timeSince(comment.time)}\n          {\" ago\"}\n        </p>\n\n        {childrenToShow}\n      </div>\n    );\n  }\n  handleCardClick(e: React.MouseEvent<HTMLDivElement>): void {\n    // this is to prevent other cards from collapsing too\n\n    e.stopPropagation();\n\n    // dont update state if click was A link\n    if ((e.target as any).tagName === \"A\") {\n      return;\n    }\n\n    const target = e.target as any;\n\n    // allow some gutter expansion once shifted over\n    const gutterRatio = this.state.expandSelf ? 0.85 : 0.9;\n\n    if (\n      this.props.depth > 0 &&\n      this.props.canExpand &&\n      (e.pageX + target.offsetLeft) / window.innerWidth > gutterRatio\n    ) {\n      this.setState({ expandSelf: !this.state.expandSelf });\n    } else {\n      const isOpen = !this.state.isOpen;\n      this.setState({ isOpen }, () => {\n        if (!isOpen) {\n          this.props.scrollToNextChild();\n        }\n      });\n    }\n  }\n}\n\nexport function isValidComment(comment: KidsObj3 | null) {\n  if (comment === null) {\n    return false;\n  }\n  const isBad =\n    comment.deleted &&\n    (comment.kidsObj === undefined || comment.kidsObj!.length === 0);\n\n  return !isBad;\n}\n","import { History } from \"history\";\nimport React from \"react\";\n\nimport { DataLayer } from \"./DataLayer\";\nimport { getDomain } from \"./getDomain\";\nimport { isValidComment } from \"./HnComment\";\nimport { HnCommentList } from \"./HnCommentList\";\nimport { timeSince } from \"./timeSince\";\n\ninterface HnStoryPageState {\n  data: HnItem | undefined;\n}\n\nexport interface HnStoryPageProps {\n  dataLayer: DataLayer | null;\n  id: number;\n  history: History;\n}\n\nexport class HnStoryPage extends React.Component<\n  HnStoryPageProps,\n  HnStoryPageState\n> {\n  constructor(props: HnStoryPageProps) {\n    super(props);\n\n    this.state = {\n      data: undefined\n    };\n\n    this.anchorClickHandler = this.anchorClickHandler.bind(this);\n  }\n\n  render() {\n    if (this.state.data === undefined) {\n      return null;\n    }\n\n    const storyData = this.state.data;\n\n    const storyLinkEl =\n      storyData.url === undefined ? (\n        <span>{storyData.title}</span>\n      ) : (\n        <a href={storyData.url}>{storyData.title}</a>\n      );\n\n    const comments = (storyData.kidsObj || []).filter(isValidComment);\n\n    return (\n      <div>\n        <h2 style={{ overflowWrap: \"break-word\" }}>{storyLinkEl}</h2>\n        <h4>\n          <span>{storyData.by}</span>\n          <span>{\" | \"}</span>\n          <span>\n            {storyData.score}\n            {\" points\"}\n          </span>\n          <span>{\" | \"}</span>\n          <span>{timeSince(storyData.time)} ago</span>\n          <span>{\" | \"}</span>\n          <span>{getDomain(storyData.url)}</span>\n        </h4>\n        {storyData.text !== undefined && (\n          <p\n            className=\"top-text\"\n            dangerouslySetInnerHTML={{ __html: storyData.text }}\n          />\n        )}\n\n        <HnCommentList childComments={comments} canExpand={true} depth={0} />\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n\n    // set the data initially -- kick off async request if needed\n    this.updateDataFromDataLayer();\n    document.body.addEventListener(\"click\", this.anchorClickHandler);\n  }\n\n  componentWillUnmount() {\n    document.body.removeEventListener(\"click\", this.anchorClickHandler);\n  }\n  anchorClickHandler(e: any) {\n    if (e.target.tagName !== \"A\") {\n      return;\n    }\n\n    // have a link\n\n    const link = e.target as HTMLAnchorElement;\n\n    const regex = /https?:\\/\\/news\\.ycombinator\\.com\\/item\\?id=(\\d+)/;\n    const matches = link.href.match(regex);\n\n    if (matches === null) {\n      return;\n    }\n\n    // this will navigate to the new page\n    this.props.history.push(\"/story/\" + matches[1]);\n\n    e.preventDefault();\n    return false;\n  }\n\n  private async updateDataFromDataLayer() {\n    const storyData = await this.getStoryData(this.props.id);\n\n    this.setState({ data: storyData });\n  }\n\n  componentDidUpdate(prevProps: HnStoryPageProps) {\n    // load the story once the data layer is available\n    if (prevProps.dataLayer === null && this.props.dataLayer !== null) {\n      this.updateDataFromDataLayer();\n    }\n  }\n\n  private async getStoryData(id: number): Promise<HnItem | undefined> {\n    return this.props.dataLayer === null\n      ? undefined\n      : await this.props.dataLayer.getStoryData(id);\n  }\n}\n","import \"./App.css\";\n\nimport _ from \"lodash\";\nimport React, { RefObject } from \"react\";\nimport { Route, RouteComponentProps, Switch, withRouter } from \"react-router\";\n\nimport { DataLayer } from \"./DataLayer\";\nimport { Header } from \"./Header\";\nimport { HnStoryList } from \"./HnStoryList\";\nimport { HnStoryPage } from \"./HnStoryPage\";\n\ninterface StoryPageProps extends RouteComponentProps<{ id: string }> {}\ninterface AppPageProps extends RouteComponentProps<{ page?: string }> {}\n\nclass _App extends React.Component<AppPageProps, AppState> {\n  dataLayer: RefObject<DataLayer>;\n\n  static getDerivedStateFromProps(props: AppPageProps, state: AppState) {\n    let listType: HnListSource;\n    switch (props.match.params.page) {\n      case \"day\":\n        listType = HnListSource.Day;\n        break;\n\n      case \"week\":\n        listType = HnListSource.Week;\n        break;\n\n      case \"month\":\n        listType = HnListSource.Month;\n        break;\n\n      default:\n        listType = HnListSource.Front;\n        break;\n    }\n\n    console.log(\"derived state\", props.match.params.page, listType);\n\n    return { ...state, activeList: listType };\n  }\n\n  constructor(props: AppPageProps) {\n    super(props);\n\n    this.state = {\n      items: [],\n      allItems: [],\n      activeList: HnListSource.Front,\n      error: undefined\n    };\n\n    this.dataLayer = React.createRef();\n\n    this.updateActiveDataStore = this.updateActiveDataStore.bind(this);\n    this.newItemsProvided = this.newItemsProvided.bind(this);\n  }\n\n  updateActiveDataStore(items: HnItem[], isActive: boolean) {\n    if (isActive) {\n      this.setState({ items });\n    }\n\n    // this is needed to ensure that state updates are atomic\n    // all new items need to be joined together... cannot skip updatesÍ\n    this.setState(prevState => {\n      let allItems = _.cloneDeep(prevState.allItems).concat(items);\n      allItems = _.uniqBy(allItems, c => c.id);\n      console.log(\"new all itemS\", allItems);\n      return { allItems };\n    });\n  }\n\n  render() {\n    console.log(\"render state\", this.state, this.dataLayer);\n\n    if (this.state.error !== undefined) {\n      return (\n        <div>\n          <p>an error occurred, refresh the page</p>\n          <p>\n            unfortunately, your local data was cleared to prevent corruption\n          </p>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <DataLayer\n          ref={this.dataLayer}\n          provideNewItems={this.newItemsProvided}\n        />\n\n        <Header\n          requestNewData={() => {\n            this.dataLayer.current!.loadData(this.state.activeList);\n          }}\n        />\n\n        <Switch>\n          <Route\n            path={\"/story/:id\"}\n            exact\n            render={(props: StoryPageProps) => (\n              <HnStoryPage\n                id={+props.match.params.id}\n                dataLayer={this.dataLayer.current}\n                history={props.history}\n                key={+props.match.params.id}\n              />\n            )}\n          />\n          <Route\n            path=\"/:page?\"\n            render={(props: AppPageProps) => (\n              <HnStoryList\n                items={\n                  this.dataLayer.current === null\n                    ? []\n                    : this.dataLayer.current.getPageData(\n                        props.match.params.page\n                      )\n                }\n              />\n            )}\n          />\n        </Switch>\n      </div>\n    );\n  }\n\n  newItemsProvided(items: HnItem[], listType: HnListSource): void {\n    if (listType === this.state.activeList) {\n      this.setState({ items });\n    }\n  }\n}\n\nexport const App = withRouter(_App);\n\nexport enum HnListSource {\n  Front,\n  Day,\n  Week,\n  Month\n}\n\ninterface AppState {\n  items: HnItem[];\n  allItems: HnItem[];\n\n  error: any;\n\n  activeList: HnListSource;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap-theme.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport * as Sentry from \"@sentry/browser\";\nimport localForage from \"localforage\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport smoothscroll from \"smoothscroll-polyfill\";\n\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// kick off the polyfill!\nsmoothscroll.polyfill();\n\n// TODO: get rid of this call eventually\nSentry.init({\n  dsn: \"https://d8e8092157294c86b5014343cede60e6@sentry.io/1362584\"\n});\n\nwindow.onerror = function(msg, url, lineNo, columnNo, error) {\n  // ... handle error ...\n  console.error(\"major error\", msg);\n  localForage.clear();\n\n  Sentry.captureException(error);\n\n  document.body.innerHTML =\n    \"<h1>major error occurred.  local storage cleared to avoid corruption. please refresh</h1>\";\n};\n\nReactDOM.render(\n  <BrowserRouter>\n    <Route path={\"/:page?\"}>\n      <App />\n    </Route>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}