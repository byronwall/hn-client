{"version":3,"sources":["LocalStorageWrapper.tsx","DataLayer.tsx","Header.tsx","getDomain.tsx","timeSince.tsx","HnListItem.tsx","HnStoryList.tsx","HnCommentList.tsx","HnComment.tsx","HnStoryPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LocalStorageWrapper","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","item","undefined","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","itemCompressed","obj","_this2","wrap","_context","prev","next","localForage","getItem","storageName","sent","setState","dataDidUpdate","abrupt","removeItem","JSON","parse","stop","apply","arguments","prevProps","prevState","_this3","_","isEqual","activeItem","console","log","strToStore","stringify","setItem","React","Component","DataLayer","allItems","currentLists","isLoadingFresh","isLoadingNewData","activeList","react_default","createElement","Fragment","LocalStorageWrapper_LocalStorageWrapper","processDataFromLocalStorage","_getStoryData","id","find","c","getStoryFromServer","_x","_getStoryFromServer","_callee2","url","response","data","_context2","updateIsLoadingStatus","fetch","ok","error","json","_x2","page","source","day","HnListSource","Day","week","Week","month","Month","front","Front","idsToLoad","loadData","dataOut","stories","map","filter","sortBy","score","_loadData","_callee3","_context3","t0","updateNewItems","_x3","allLists","_this4","forEach","list","items","provideNewItems","loadFreshSource","listType","_this5","newList","newDataList","cloneDeep","listToUpdate","push","newAllItems","storiesToReturn","newStory","existingStoryIndex","findIndex","existingStory","lastUpdated","Header","_React$PureComponent","Navbar","Brand","NavLink","to","Nav","lib","NavItem","eventKey","Form","pullRight","isLoading","spinner","size","Route","render","_ref","location","pathname","indexOf","Button","bsStyle","onClick","requestNewData","Glyphicon","glyph","PureComponent","getDomain","matches","match","timeSince","date","seconds","Math","floor","Date","getTime","interval","HnListItem","story","commentCount","Link","descendants","storyLinkEl","title","href","target","time","HnStoryList","document","sotry","HnListItem_HnListItem","HnCommentList","childRefs","childComments","createRef","validChildren","comm","childComm","index","HnComment_HnComment","comment","depth","canExpand","ref","scrollToNextChild","nextSib","meEl","divToScroll","current","getDivRef","actions","computeScrollIntoView","block","inline","scrollMode","divToScrollMe","actionsMe","length","window","scrollTo","top","offsetTop","behavior","colors","HnComment","isOpen","expandSelf","divRef","kidsObj","isValidComment","commentText","text","childrenToShow","className","dangerouslySetInnerHTML","__html","HnCommentList_HnCommentList","borderColor","classNames","collapsed","e","handleCardClick","style","paddingLeft","max","marginLeft","borderLeftColor","borderLeftWidth","borderRight","paddingRight","fontWeight","by","stopPropagation","tagName","gutterRatio","pageX","offsetLeft","innerWidth","deleted","HnStoryPage","anchorClickHandler","bind","assertThisInitialized","storyData","comments","concat","overflowWrap","updateDataFromDataLayer","body","addEventListener","removeEventListener","link","history","preventDefault","_updateDataFromDataLayer","getStoryData","dataLayer","_App","updateActiveDataStore","newItemsProvided","params","objectSpread","isActive","uniqBy","DataLayer_DataLayer","Header_Header","Switch","es_Route","path","exact","HnStoryPage_HnStoryPage","HnStoryList_HnStoryList","getPageData","App","withRouter","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","smoothscroll","polyfill","onerror","msg","lineNo","columnNo","clear","innerHTML","ReactDOM","BrowserRouter","src_App_App","getElementById","URL","process","origin","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8693bb48.chunk.js","sourcesContent":["import localForage from \"localforage\";\nimport _ from \"lodash\";\n\nimport React from \"react\";\n\nexport interface LocalStorageWrapperProps<TDataType> {\n  storageName: string;\n  activeItem: TDataType;\n\n  dataDidUpdate(item: TDataType | undefined): void;\n}\n\nexport interface LocalStorageWrapperState<TDataType> {\n  item: TDataType | undefined;\n}\n\nexport class LocalStorageWrapper<TDataType> extends React.Component<\n  LocalStorageWrapperProps<TDataType>,\n  LocalStorageWrapperState<TDataType>\n> {\n  constructor(props: LocalStorageWrapperProps<TDataType>) {\n    super(props);\n    this.state = {\n      item: undefined\n    };\n  }\n  render() {\n    return null;\n  }\n  async componentDidMount() {\n    // check localStorage for obj\n    const itemCompressed = await localForage.getItem<string>(\n      this.props.storageName\n    );\n    // decompress\n    if (itemCompressed === undefined || itemCompressed === null) {\n      this.setState({ item: undefined }, () =>\n        this.props.dataDidUpdate(undefined)\n      );\n      return;\n    }\n\n    // seems to be some sort of corruption on load.. clear localStorage\n    if (itemCompressed === null) {\n      localForage.removeItem(this.props.storageName);\n      this.setState({ item: undefined }, () =>\n        this.props.dataDidUpdate(undefined)\n      );\n      return;\n    }\n    // parse JSON for what was found\n    const obj = JSON.parse(itemCompressed) as TDataType;\n    this.setState({ item: obj }, () => this.props.dataDidUpdate(obj));\n  }\n  componentDidUpdate(\n    prevProps: LocalStorageWrapperProps<TDataType>,\n    prevState: LocalStorageWrapperState<TDataType>\n  ) {\n    // if activeItem changed... save to local storage.. update self\n    if (!_.isEqual(prevProps.activeItem, this.props.activeItem)) {\n      // do a check for undefined and kick out?\n      if (this.props.activeItem === undefined) {\n        return;\n      }\n      // TODO: this save should only happen when the data is new\n      if (_.isEqual(this.state.item, this.props.activeItem)) {\n        // do not need to save or update... it is the same as current state\n        // happens when loaded\n        return;\n      }\n      console.log(\"save item\", this.props.activeItem);\n      // compress and save\n      const strToStore = JSON.stringify(this.props.activeItem);\n\n      localForage.setItem(this.props.storageName, strToStore);\n      this.setState({ item: this.props.activeItem }, () => {\n        console.log(\"updating data after a save?\");\n        this.props.dataDidUpdate(this.props.activeItem);\n      });\n    }\n  }\n}\n","import _ from \"lodash\";\nimport React from \"react\";\n\nimport { HnListSource } from \"./App\";\nimport { LocalStorageWrapper } from \"./LocalStorageWrapper\";\n\ninterface DataLayerState {\n  allItems: HnItem[];\n  currentLists: DataList[];\n\n  isLoadingFresh: boolean;\n\n  isLoadingNewData: boolean;\n}\n\nexport interface DataList {\n  key: HnListSource;\n  stories: number[]; // will be an array of IDs\n}\n\ninterface DataLayerProps {\n  provideNewItems(items: HnItem[], listType: HnListSource): void;\n  updateIsLoadingStatus(newStatus: boolean): void;\n  loadFreshSource: HnListSource;\n}\n\nexport class DataLayer extends React.Component<DataLayerProps, DataLayerState> {\n  refreshData(activeList: HnListSource): void {}\n  constructor(props: DataLayerProps) {\n    super(props);\n\n    this.state = {\n      allItems: [],\n      currentLists: [],\n      isLoadingFresh: false,\n      isLoadingNewData: false,\n    };\n  }\n\n  render() {\n    // TODO: generalize the comps and events for the data type (don't duplicate)\n    return (\n      <React.Fragment>\n        <LocalStorageWrapper<HnItem[]>\n          dataDidUpdate={(allItems) =>\n            this.processDataFromLocalStorage(allItems, this.state.currentLists)\n          }\n          activeItem={this.state.allItems}\n          storageName=\"HN-ALL-ITEMS\"\n        />\n\n        <LocalStorageWrapper<DataList[]>\n          dataDidUpdate={(currentLists) =>\n            this.processDataFromLocalStorage(this.state.allItems, currentLists)\n          }\n          activeItem={this.state.currentLists}\n          storageName=\"HN-DATA-LISTS\"\n        />\n      </React.Fragment>\n    );\n  }\n\n  async getStoryData(id: number) {\n    let item = this.state.allItems.find((c) => c.id === id);\n    if (item !== undefined) {\n      return item;\n    }\n\n    // hit the API for the story data\n    return await this.getStoryFromServer(id);\n  }\n\n  public async getStoryFromServer(id: number) {\n    let url = \"/api/story/\" + id;\n\n    this.props.updateIsLoadingStatus(true);\n    const response = await fetch(url);\n    if (!response.ok) {\n      console.error(response);\n      return undefined;\n    }\n    const data: HnItem | { error: string } = await response.json();\n\n    if (\"error\" in data) {\n      console.error(data);\n      this.props.updateIsLoadingStatus(false);\n      return undefined;\n    }\n\n    console.log(\"hn item from server\", data);\n\n    this.props.updateIsLoadingStatus(false);\n    return data;\n  }\n\n  getPageData(page: string | undefined) {\n    // TODO: add loading step if data is missing -- figure out how to trigger refresh\n\n    console.log(\"getpagedata\", page, this.state);\n\n    if (page === \"\" || page === undefined) {\n      page = \"front\";\n    }\n\n    const pageToSourceMapping: { [key: string]: HnListSource } = {\n      day: HnListSource.Day,\n      week: HnListSource.Week,\n      month: HnListSource.Month,\n      front: HnListSource.Front,\n    };\n\n    const source = pageToSourceMapping[page];\n\n    if (source === undefined) {\n      console.error(\"unknown page -> source map\");\n      return [];\n    }\n\n    const idsToLoad = this.state.currentLists.find((c) => c.key === source);\n\n    if (idsToLoad === undefined) {\n      // TODO: this needs to fire off an update\n      console.log(\"no ids to load...\");\n      this.loadData(source);\n      return [];\n    }\n\n    let dataOut = idsToLoad.stories\n      .map((id) => this.state.allItems.find((c) => c.id === id))\n      .filter((c) => c !== undefined) as HnItem[];\n\n    if (source !== HnListSource.Front) {\n      dataOut = _.sortBy(dataOut, (c) => -c.score);\n    }\n\n    return dataOut;\n  }\n\n  public async loadData(activeList: HnListSource) {\n    console.log(\"loading data\");\n    let url = \"\";\n    switch (activeList) {\n      case HnListSource.Front:\n        url = \"/topstories/topstories\";\n        break;\n      case HnListSource.Day:\n        url = \"/topstories/day\";\n        break;\n      case HnListSource.Week:\n        url = \"/topstories/week\";\n        break;\n      case HnListSource.Month:\n        url = \"/topstories/month\";\n        break;\n    }\n\n    if (this.state.isLoadingNewData) {\n      console.log(\"only have one request at a time\");\n      return;\n    }\n\n    this.props.updateIsLoadingStatus(true);\n    this.setState({ isLoadingNewData: true });\n    const response = await fetch(url);\n    if (!response.ok) {\n      console.error(response);\n      this.props.updateIsLoadingStatus(false);\n      this.setState({ isLoadingNewData: false });\n      return;\n    }\n    let data: HnItem[] = await response.json();\n\n    if (activeList !== HnListSource.Front) {\n      // flip score to get descending\n      data = _.sortBy<HnItem>(data, (c) => -c.score);\n    }\n\n    // TODO: do not reload data on mount... use a button\n\n    // TODO: take that list of items and set it equal to the current list\n    // TODO: update the items with a merge of sorts instead of overwriting\n\n    console.log(\"hn items from server\", data);\n\n    this.props.updateIsLoadingStatus(false);\n    this.setState({ isLoadingNewData: false });\n    this.updateNewItems(data, activeList);\n  }\n\n  processDataFromLocalStorage(\n    allItems: HnItem[] | undefined,\n    allLists: DataList[] | undefined\n  ) {\n    // all items come through\n    // the lists come through also\n\n    console.log(\"fresh data from local storage\", allItems, allLists);\n\n    // these state updates ensure that the data is available for next pass\n    if (allItems !== undefined) {\n      this.setState({ allItems });\n    }\n\n    if (allLists !== undefined) {\n      this.setState({ currentLists: allLists });\n    }\n\n    if (allItems === undefined || allLists === undefined) {\n      if (!this.state.isLoadingFresh) {\n        console.log(\n          \"local storage is empty, loading fresh data based on active page\",\n          this.props.loadFreshSource\n        );\n        this.setState({ isLoadingFresh: true });\n        this.loadData(this.props.loadFreshSource);\n      }\n      return;\n    }\n\n    // iterate the lists\n\n    allLists.forEach((list) => {\n      const items = list.stories\n        .map((id) => allItems.find((c) => c.id === id))\n        .filter((c) => c !== undefined) as HnItem[];\n\n      this.props.provideNewItems(items, list.key);\n    });\n\n    // send out update commands to each one\n  }\n\n  updateNewItems(data: HnItem[] | undefined, listType: HnListSource): void {\n    console.log(\"items coming from server\", data, listType);\n\n    if (data === undefined) {\n      data = [];\n    }\n\n    // replace the list with the new IDs\n    const newList = data.map((c) => c.id);\n\n    const newDataList = _.cloneDeep(this.state.currentLists);\n\n    let listToUpdate = newDataList.find((c) => c.key === listType);\n\n    if (listToUpdate === undefined) {\n      newDataList.push({\n        key: listType,\n        stories: newList,\n      });\n    } else {\n      listToUpdate.stories = newList;\n    }\n\n    // get all items... replace those whose data is newer in this version\n\n    const newAllItems = _.cloneDeep(this.state.allItems);\n\n    const storiesToReturn: HnItem[] = [];\n\n    data.forEach((newStory) => {\n      const existingStoryIndex = newAllItems.findIndex(\n        (c) => c.id === newStory.id\n      );\n\n      // add the story if it is new\n      if (existingStoryIndex === -1) {\n        newAllItems.push(newStory);\n        storiesToReturn.push(newStory);\n        return;\n      }\n\n      // check the data if already found\n      const existingStory = newAllItems[existingStoryIndex];\n      if (existingStory.lastUpdated > newStory.lastUpdated) {\n        storiesToReturn.push(existingStory);\n        return;\n      }\n\n      newAllItems[existingStoryIndex] = newStory;\n      storiesToReturn.push(newStory);\n\n      // new story is actually newer... replace its data\n    });\n\n    // update otherwise\n\n    this.setState({ allItems: newAllItems, currentLists: newDataList }, () => {\n      this.props.provideNewItems(storiesToReturn, listType);\n    });\n  }\n}\n","import React from \"react\";\nimport { Button, Glyphicon, Nav, Navbar, NavItem } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { NavLink, Route } from \"react-router-dom\";\nimport { Spinner } from \"@blueprintjs/core\";\n\ninterface HeaderProps {\n  requestNewData(): void;\n  isLoading: boolean;\n}\n\nexport class Header extends React.PureComponent<HeaderProps> {\n  render() {\n    return (\n      <Navbar>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <NavLink to=\"/\">hn-offline</NavLink>\n          </Navbar.Brand>\n        </Navbar.Header>\n        <Nav>\n          <LinkContainer to=\"/day\">\n            <NavItem eventKey={1}>day</NavItem>\n          </LinkContainer>\n\n          <LinkContainer to=\"/week\">\n            <NavItem eventKey={2}>week</NavItem>\n          </LinkContainer>\n\n          <LinkContainer to=\"/month\">\n            <NavItem eventKey={3}>month</NavItem>\n          </LinkContainer>\n        </Nav>\n\n        <Navbar.Form pullRight>\n          {this.props.isLoading && <Spinner size={32} />}\n          {!this.props.isLoading && (\n            <Route\n              render={({ location }) => {\n                return location.pathname.indexOf(\"/story\") === -1 ? (\n                  <Button\n                    bsStyle=\"primary\"\n                    onClick={() => this.props.requestNewData()}\n                  >\n                    <Glyphicon glyph=\"refresh\" />\n                  </Button>\n                ) : null;\n              }}\n            />\n          )}\n        </Navbar.Form>\n      </Navbar>\n    );\n  }\n}\n","export function getDomain(url: string | undefined) {\n  if (url === undefined) {\n    return \"\";\n  }\n  var matches = url.match(/^https?\\:\\/\\/([^\\/?#]+)(?:[\\/?#]|$)/i);\n  var domain = matches && matches[1];\n  return domain;\n}\n","export function timeSince(date: number) {\n  var seconds = Math.floor(new Date().getTime() / 1000 - date);\n  var interval = Math.floor(seconds / 31536000);\n  if (interval > 1) {\n    return interval + \" years\";\n  }\n  interval = Math.floor(seconds / 2592000);\n  if (interval > 1) {\n    return interval + \" months\";\n  }\n  interval = Math.floor(seconds / 86400);\n  if (interval > 1) {\n    return interval + \" days\";\n  }\n  interval = Math.floor(seconds / 3600);\n  if (interval >= 1) {\n    return interval + \" hour\" + (interval > 1 ? \"s\" : \"\");\n  }\n  interval = Math.floor(seconds / 60);\n  if (interval > 1) {\n    return interval + \" minutes\";\n  }\n  return Math.floor(seconds) + \" seconds\";\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { getDomain } from \"./getDomain\";\nimport { timeSince } from \"./timeSince\";\nimport { Glyphicon } from \"react-bootstrap\";\n\nexport interface HnStoryProps {\n  data: HnItem;\n}\n\nexport class HnListItem extends React.Component<HnStoryProps> {\n  render() {\n    const story = this.props.data;\n\n    const commentCount = (\n      <React.Fragment>\n        {\" | \"}\n        <Link to={\"/story/\" + story.id}>\n          <Glyphicon glyph=\"comment\" /> {story.descendants}\n        </Link>\n      </React.Fragment>\n    );\n\n    const storyLinkEl =\n      story.url === undefined ? (\n        <Link to={\"/story/\" + story.id}>{story.title}</Link>\n      ) : (\n        <a href={story.url} target=\"_blank\">\n          {story.title}\n        </a>\n      );\n\n    return (\n      <div>\n        <p>{storyLinkEl}</p>\n        <p>\n          <span>\n            <Glyphicon glyph=\"chevron-up\" /> {\" \" + story.score}\n          </span>\n          {story.descendants !== undefined && commentCount}\n          <span>{\" | \" + timeSince(story.time) + \" ago\"}</span>\n          <span>{\" | \" + getDomain(story.url)}</span>\n        </p>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport { HnListItem } from \"./HnListItem\";\n\ninterface HnStoryListProps {\n  items: HnItem[];\n}\n\nexport class HnStoryList extends React.Component<HnStoryListProps> {\n  constructor(props: HnStoryListProps) {\n    super(props);\n    this.state = {\n      items: []\n    };\n  }\n  render() {\n    document.title = `HN: Offline`;\n    return (\n      <div>\n        {this.props.items\n          .filter(sotry => sotry.descendants !== undefined)\n          .map(item => (\n            <HnListItem data={item} key={item.id} />\n          ))}\n      </div>\n    );\n  }\n}\n","import computeScrollIntoView from \"compute-scroll-into-view\";\nimport _ from \"lodash\";\nimport React from \"react\";\n\nimport { HnComment } from \"./HnComment\";\n\ninterface HnCommentListProps {\n  childComments: Array<KidsObj3 | null>;\n  depth: number;\n  canExpand: boolean;\n}\n\nexport class HnCommentList extends React.Component<HnCommentListProps, {}> {\n  childRefs: Array<React.RefObject<HnComment>> = [];\n  constructor(props: HnCommentListProps) {\n    super(props);\n    props.childComments.forEach(item => {\n      if (item === null) {\n        return;\n      }\n      this.childRefs[item.id] = React.createRef();\n    });\n  }\n  render() {\n    const validChildren = this.props.childComments.filter(\n      comm => comm !== null\n    );\n    return (\n      <React.Fragment>\n        {validChildren.map((childComm, index) => (\n          <HnComment\n            key={childComm!.id}\n            comment={childComm}\n            depth={this.props.depth}\n            canExpand={this.props.canExpand}\n            ref={this.childRefs[childComm!.id]}\n            scrollToNextChild={() => {\n              // check if next is real\n              // HACK: nothing here is pretty... bouncing around refs to get the DIV to scroll to\n              // scroll to self if no siblings around\n              let nextSib = validChildren[index + 1];\n              const meEl = validChildren[index];\n\n              if (meEl === null) {\n                return;\n              }\n\n              if (nextSib === undefined || nextSib === null) {\n                nextSib = meEl;\n              }\n\n              const refObj = this.childRefs[nextSib.id].current!;\n              const divToScroll = refObj.getDivRef();\n\n              const actions = computeScrollIntoView(divToScroll, {\n                block: \"nearest\",\n                inline: \"nearest\",\n                scrollMode: \"if-needed\"\n              });\n\n              const refObjMe = this.childRefs[meEl.id].current!;\n              const divToScrollMe = refObjMe.getDivRef();\n\n              const actionsMe = computeScrollIntoView(divToScrollMe, {\n                block: \"nearest\",\n                inline: \"nearest\",\n                scrollMode: \"if-needed\"\n              });\n\n              if (actions.length == 0 && actionsMe.length == 0) {\n                return;\n              }\n\n              // the goal here is to determine if the next sibling or the collapsed header is hidden\n              // if either is not visible, it will scroll to the next sib (or collapsed if no sibs)\n\n              // TODO: consider if this 80 should be less if no siblings\n              window.scrollTo({\n                top: divToScroll.offsetTop - 80,\n                behavior: \"smooth\" // Optional, adds animation)\n              });\n            }}\n          />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { HnCommentList } from \"./HnCommentList\";\nimport { timeSince } from \"./timeSince\";\n\nexport interface HnCommentProps {\n  comment: KidsObj3 | null;\n  depth: number;\n\n  canExpand: boolean;\n\n  scrollToNextChild(): void;\n}\n\ninterface HnCommentState {\n  isOpen: boolean;\n  expandSelf: boolean;\n}\n\nconst colors = [\n  \"#bc8672\",\n  \"#c5be53\",\n  \"#d46850\",\n  \"#8c7f3b\",\n  \"#dec392\",\n  \"#c9893a\"\n];\n\nexport class HnComment extends React.Component<HnCommentProps, HnCommentState> {\n  divRef: React.RefObject<HTMLDivElement>;\n\n  static getDerivedStateFromProps(\n    props: HnCommentProps,\n    state: HnCommentState\n  ) {\n    // if a parent expands, collapse this one\n    if (!props.canExpand) {\n      return { isOpen: state.isOpen, expandSelf: false };\n    }\n\n    return null;\n  }\n\n  constructor(props: HnCommentProps) {\n    super(props);\n\n    this.state = {\n      isOpen: true,\n      expandSelf: false\n    };\n\n    this.divRef = React.createRef();\n  }\n\n  getDivRef() {\n    return this.divRef.current!;\n  }\n\n  render() {\n    const comment = this.props.comment;\n\n    if (comment === null) {\n      return null;\n    }\n\n    const childComments = (comment.kidsObj || []).filter(isValidComment);\n    const commentText = comment.text || \"\";\n\n    if (!isValidComment(comment)) {\n      // kick out nothing if the comment was deleted and has no children\n      return null;\n    }\n\n    // TODO: rewrite links to hn to open in this site instead\n\n    const childrenToShow = !this.state.isOpen ? null : (\n      <React.Fragment>\n        <p\n          className=\"comment\"\n          dangerouslySetInnerHTML={{ __html: commentText }}\n        />\n\n        {childComments.length > 0 && (\n          <HnCommentList\n            childComments={childComments}\n            canExpand={this.props.canExpand && !this.state.expandSelf}\n            depth={this.props.depth + 1}\n          />\n        )}\n      </React.Fragment>\n    );\n\n    const borderColor =\n      this.props.depth < colors.length ? colors[this.props.depth] : \"#bbb\";\n    return (\n      <div\n        className={classNames(\"bp3-card\", { collapsed: !this.state.isOpen })}\n        onClick={e => this.handleCardClick(e)}\n        style={{\n          paddingLeft: 12 + Math.max(4 - this.props.depth),\n          marginLeft:\n            this.state.expandSelf && this.state.isOpen\n              ? -17 * this.props.depth\n              : 0,\n\n          borderLeftColor: borderColor,\n\n          borderLeftWidth: this.state.expandSelf ? 6 : undefined,\n\n          borderRight: this.state.expandSelf\n            ? \"1px solid\" + borderColor\n            : undefined,\n          paddingRight: this.state.expandSelf ? 6 : undefined\n        }}\n      >\n        <p\n          style={{ fontWeight: this.state.isOpen ? 450 : 300 }}\n          ref={this.divRef}\n        >\n          {comment.by}\n          {\" | \"}\n          {timeSince(comment.time)}\n          {\" ago\"}\n        </p>\n\n        {childrenToShow}\n      </div>\n    );\n  }\n  handleCardClick(e: React.MouseEvent<HTMLDivElement>): void {\n    // this is to prevent other cards from collapsing too\n\n    e.stopPropagation();\n\n    // dont update state if click was A link\n    if ((e.target as any).tagName === \"A\") {\n      return;\n    }\n\n    const target = e.target as any;\n\n    // allow some gutter expansion once shifted over\n    const gutterRatio = this.state.expandSelf ? 0.85 : 0.9;\n\n    if (\n      this.props.depth > 0 &&\n      this.props.canExpand &&\n      (e.pageX + target.offsetLeft) / window.innerWidth > gutterRatio\n    ) {\n      this.setState({ expandSelf: !this.state.expandSelf });\n    } else {\n      const isOpen = !this.state.isOpen;\n      this.setState({ isOpen }, () => {\n        if (!isOpen) {\n          this.props.scrollToNextChild();\n        }\n      });\n    }\n  }\n}\n\nexport function isValidComment(comment: KidsObj3 | null) {\n  if (comment === null) {\n    return false;\n  }\n  const isBad =\n    comment.deleted &&\n    (comment.kidsObj === undefined || comment.kidsObj!.length === 0);\n\n  return !isBad;\n}\n","import { History } from \"history\";\nimport React from \"react\";\n\nimport { DataLayer } from \"./DataLayer\";\nimport { getDomain } from \"./getDomain\";\nimport { isValidComment } from \"./HnComment\";\nimport { HnCommentList } from \"./HnCommentList\";\nimport { timeSince } from \"./timeSince\";\n\ninterface HnStoryPageState {\n  data: HnItem | undefined;\n}\n\nexport interface HnStoryPageProps {\n  dataLayer: DataLayer | null;\n  id: number;\n  history: History;\n}\n\nexport class HnStoryPage extends React.Component<\n  HnStoryPageProps,\n  HnStoryPageState\n> {\n  constructor(props: HnStoryPageProps) {\n    super(props);\n\n    this.state = {\n      data: undefined\n    };\n\n    this.anchorClickHandler = this.anchorClickHandler.bind(this);\n  }\n\n  render() {\n    if (this.state.data === undefined) {\n      return null;\n    }\n\n    const storyData = this.state.data;\n\n    const storyLinkEl =\n      storyData.url === undefined ? (\n        <span>{storyData.title}</span>\n      ) : (\n        <a href={storyData.url}>{storyData.title}</a>\n      );\n\n    const comments = (storyData.kidsObj || []).filter(isValidComment);\n\n    document.title = `HN: ${storyData.title}`;\n\n    return (\n      <div>\n        <h2 style={{ overflowWrap: \"break-word\" }}>{storyLinkEl}</h2>\n        <h4>\n          <span>{storyData.by}</span>\n          <span>{\" | \"}</span>\n          <span>\n            {storyData.score}\n            {\" points\"}\n          </span>\n          <span>{\" | \"}</span>\n          <span>{timeSince(storyData.time)} ago</span>\n          <span>{\" | \"}</span>\n          <span>{getDomain(storyData.url)}</span>\n        </h4>\n        {storyData.text !== undefined && (\n          <p\n            className=\"top-text\"\n            dangerouslySetInnerHTML={{ __html: storyData.text }}\n          />\n        )}\n\n        <HnCommentList childComments={comments} canExpand={true} depth={0} />\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n\n    // set the data initially -- kick off async request if needed\n    this.updateDataFromDataLayer();\n    document.body.addEventListener(\"click\", this.anchorClickHandler);\n  }\n\n  componentWillUnmount() {\n    document.body.removeEventListener(\"click\", this.anchorClickHandler);\n  }\n  anchorClickHandler(e: any) {\n    if (e.target.tagName !== \"A\") {\n      return;\n    }\n\n    // have a link\n\n    const link = e.target as HTMLAnchorElement;\n\n    const regex = /https?:\\/\\/news\\.ycombinator\\.com\\/item\\?id=(\\d+)/;\n    const matches = link.href.match(regex);\n\n    if (matches === null) {\n      link.target = \"_blank\";\n      return;\n    }\n\n    // this will navigate to the new page\n    this.props.history.push(\"/story/\" + matches[1]);\n\n    e.preventDefault();\n    return false;\n  }\n\n  private async updateDataFromDataLayer() {\n    const storyData = await this.getStoryData(this.props.id);\n\n    this.setState({ data: storyData });\n  }\n\n  componentDidUpdate(prevProps: HnStoryPageProps) {\n    // load the story once the data layer is available\n    if (prevProps.dataLayer === null && this.props.dataLayer !== null) {\n      this.updateDataFromDataLayer();\n    }\n  }\n\n  private async getStoryData(id: number): Promise<HnItem | undefined> {\n    return this.props.dataLayer === null\n      ? undefined\n      : await this.props.dataLayer.getStoryData(id);\n  }\n}\n","import \"./App.css\";\n\nimport _ from \"lodash\";\nimport React, { RefObject } from \"react\";\nimport { Route, RouteComponentProps, Switch, withRouter } from \"react-router\";\n\nimport { DataLayer } from \"./DataLayer\";\nimport { Header } from \"./Header\";\nimport { HnStoryList } from \"./HnStoryList\";\nimport { HnStoryPage } from \"./HnStoryPage\";\n\ninterface StoryPageProps extends RouteComponentProps<{ id: string }> {}\ninterface AppPageProps extends RouteComponentProps<{ page?: string }> {}\n\nclass _App extends React.Component<AppPageProps, AppState> {\n  dataLayer: RefObject<DataLayer>;\n\n  static getDerivedStateFromProps(props: AppPageProps, state: AppState) {\n    let listType: HnListSource;\n    switch (props.match.params.page) {\n      case \"day\":\n        listType = HnListSource.Day;\n        break;\n\n      case \"week\":\n        listType = HnListSource.Week;\n        break;\n\n      case \"month\":\n        listType = HnListSource.Month;\n        break;\n\n      default:\n        listType = HnListSource.Front;\n        break;\n    }\n\n    console.log(\"derived state\", props.match.params.page, listType);\n\n    return { ...state, activeList: listType };\n  }\n\n  constructor(props: AppPageProps) {\n    super(props);\n\n    this.state = {\n      items: [],\n      allItems: [],\n      activeList: HnListSource.Front,\n      error: undefined,\n      isLoading: false\n    };\n\n    this.dataLayer = React.createRef();\n\n    this.updateActiveDataStore = this.updateActiveDataStore.bind(this);\n    this.newItemsProvided = this.newItemsProvided.bind(this);\n  }\n\n  updateActiveDataStore(items: HnItem[], isActive: boolean) {\n    if (isActive) {\n      this.setState({ items });\n    }\n\n    // this is needed to ensure that state updates are atomic\n    // all new items need to be joined together... cannot skip updatesÍ\n    this.setState(prevState => {\n      let allItems = _.cloneDeep(prevState.allItems).concat(items);\n      allItems = _.uniqBy(allItems, c => c.id);\n      console.log(\"new all itemS\", allItems);\n      return { allItems };\n    });\n  }\n\n  render() {\n    console.log(\"render state\", this.state, this.dataLayer);\n\n    if (this.state.error !== undefined) {\n      return (\n        <div>\n          <p>an error occurred, refresh the page</p>\n          <p>\n            unfortunately, your local data was cleared to prevent corruption\n          </p>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <DataLayer\n          ref={this.dataLayer}\n          provideNewItems={this.newItemsProvided}\n          updateIsLoadingStatus={isLoading => this.setState({ isLoading })}\n          loadFreshSource={this.state.activeList}\n        />\n\n        <Header\n          requestNewData={() => {\n            if (!this.state.isLoading) {\n              this.dataLayer.current!.loadData(this.state.activeList);\n            }\n          }}\n          isLoading={this.state.isLoading}\n        />\n\n        <Switch>\n          <Route\n            path={\"/story/:id\"}\n            exact\n            render={(props: StoryPageProps) => (\n              <HnStoryPage\n                id={+props.match.params.id}\n                dataLayer={this.dataLayer.current}\n                history={props.history}\n                key={+props.match.params.id}\n              />\n            )}\n          />\n          <Route\n            path=\"/:page?\"\n            render={(props: AppPageProps) => (\n              <HnStoryList\n                items={\n                  this.dataLayer.current === null\n                    ? []\n                    : this.dataLayer.current.getPageData(\n                        props.match.params.page\n                      )\n                }\n              />\n            )}\n          />\n        </Switch>\n      </div>\n    );\n  }\n\n  newItemsProvided(items: HnItem[], listType: HnListSource): void {\n    if (listType === this.state.activeList) {\n      this.setState({ items });\n    }\n  }\n}\n\nexport const App = withRouter(_App);\n\nexport enum HnListSource {\n  Front,\n  Day,\n  Week,\n  Month\n}\n\ninterface AppState {\n  items: HnItem[];\n  allItems: HnItem[];\n\n  error: any;\n\n  activeList: HnListSource;\n\n  isLoading: boolean;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap-theme.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\n\nimport localForage from \"localforage\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport smoothscroll from \"smoothscroll-polyfill\";\n\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// kick off the polyfill!\nsmoothscroll.polyfill();\n\nwindow.onerror = function(msg, url, lineNo, columnNo, error) {\n  // ... handle error ...\n  console.error(\"major error\", msg);\n  localForage.clear();\n\n  document.body.innerHTML =\n    \"<h1>major error occurred.  local storage cleared to avoid corruption. please refresh</h1>\";\n};\n\nReactDOM.render(\n  <BrowserRouter>\n    <Route path={\"/:page?\"}>\n      <App />\n    </Route>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}