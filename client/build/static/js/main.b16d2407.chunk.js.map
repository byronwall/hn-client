{"version":3,"sources":["LocalStorageWrapper.tsx","DataLayer.tsx","Header.tsx","getDomain.tsx","timeSince.tsx","HnListItem.tsx","App.tsx","HnStoryList.tsx","HnComment.tsx","HnStoryPage.tsx","serviceWorker.ts","index.tsx"],"names":["LocalStorageWrapper","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","item","undefined","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","itemCompressed","obj","_this2","wrap","_context","prev","next","localForage","getItem","storageName","sent","setState","dataDidUpdate","abrupt","LZString","decompress","removeItem","JSON","parse","stop","apply","arguments","prevProps","prevState","_this3","_","isEqual","activeItem","console","log","strToStore","stringify","strToStoreCompressed","compress","setItem","React","Component","DataLayer","dayItems","frontItems","monthItems","weekItems","activeList","react_default","createElement","Fragment","LocalStorageWrapper_LocalStorageWrapper","updateNewItems","HnListSource","Front","Day","Week","Month","_getStoryData","id","find","c","getStoryFromServer","_x","_getStoryFromServer","_callee2","url","response","data","_context2","fetch","ok","error","json","_x2","page","length","loadData","_loadData","_callee3","_context3","t0","_x3","listType","provideNewItems","Header","_React$PureComponent","Navbar","Brand","NavLink","to","Nav","lib","NavItem","eventKey","Form","pullRight","Button","bsStyle","onClick","requestNewData","Glyphicon","glyph","PureComponent","getDomain","matches","match","timeSince","date","seconds","Math","floor","Date","getTime","interval","HnListItem","story","href","title","score","Link","descendants","time","HnStoryList","items","map","HnListItem_HnListItem","HnComment","isOpen","comment","childComments","kidsObj","commentText","text","deleted","childrenToShow","className","dangerouslySetInnerHTML","__html","childComm","depth","card","interactive","e","handleCardClick","style","paddingLeft","width","by","stopPropagation","target","tagName","HnStoryPage","anchorClickHandler","bind","assertThisInitialized","storyData","comments","HnComment_HnComment","window","scrollTo","updateDataFromDataLayer","document","body","addEventListener","removeEventListener","history","push","preventDefault","_updateDataFromDataLayer","getStoryData","dataLayer","_App","allItems","createRef","updateActiveDataStore","newItemsProvided","params","objectSpread","isActive","cloneDeep","concat","uniqBy","errorInfo","Sentry","scope","keys","forEach","setExtra","clear","DataLayer_DataLayer","ref","Header_Header","current","Switch","es_Route","path","exact","render","HnStoryPage_HnStoryPage","HnStoryList_HnStoryList","getPageData","App","withRouter","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","dsn","ReactDOM","BrowserRouter","Route","src_App_App","getElementById","URL","process","origin","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b16d2407.chunk.js","sourcesContent":["import _ from \"lodash\";\nimport React from \"react\";\nimport LZString from \"lz-string\";\nimport localForage from \"localforage\";\n\nexport interface LocalStorageWrapperProps<TDataType> {\n  storageName: string;\n  activeItem: TDataType;\n\n  dataDidUpdate(item: TDataType | undefined): void;\n}\n\nexport interface LocalStorageWrapperState<TDataType> {\n  item: TDataType | undefined;\n}\n\nexport class LocalStorageWrapper<TDataType> extends React.Component<\n  LocalStorageWrapperProps<TDataType>,\n  LocalStorageWrapperState<TDataType>\n> {\n  constructor(props: LocalStorageWrapperProps<TDataType>) {\n    super(props);\n    this.state = {\n      item: undefined\n    };\n  }\n  render() {\n    return null;\n  }\n  async componentDidMount() {\n    // check localStorage for obj\n    const itemCompressed = await localForage.getItem<string>(\n      this.props.storageName\n    );\n    // decompress\n    if (itemCompressed === undefined || itemCompressed === null) {\n      this.setState({ item: undefined }, () =>\n        this.props.dataDidUpdate(undefined)\n      );\n      return;\n    }\n    const item = LZString.decompress(itemCompressed);\n    // seems to be some sort of corruption on load.. clear localStorage\n    if (item === null) {\n      localForage.removeItem(this.props.storageName);\n      this.setState({ item: undefined }, () =>\n        this.props.dataDidUpdate(undefined)\n      );\n      return;\n    }\n    // parse JSON for what was found\n    const obj = JSON.parse(item) as TDataType;\n    this.setState({ item: obj }, () => this.props.dataDidUpdate(obj));\n  }\n  componentDidUpdate(\n    prevProps: LocalStorageWrapperProps<TDataType>,\n    prevState: LocalStorageWrapperState<TDataType>\n  ) {\n    // if activeItem changed... save to local storage.. update self\n    if (!_.isEqual(prevProps.activeItem, this.props.activeItem)) {\n      // do a check for undefined and kick out?\n      if (this.props.activeItem === undefined) {\n        return;\n      }\n      // TODO: this save should only happen when the data is new\n      if (_.isEqual(this.state.item, this.props.activeItem)) {\n        // do not need to save or update... it is the same as current state\n        // happens when loaded\n        return;\n      }\n      console.log(\"save item\", this.props.activeItem);\n      // compress and save\n      const strToStore = JSON.stringify(this.props.activeItem);\n      const strToStoreCompressed = LZString.compress(strToStore);\n      localForage.setItem(this.props.storageName, strToStoreCompressed);\n      this.setState({ item: this.props.activeItem }, () =>\n        this.props.dataDidUpdate(this.props.activeItem)\n      );\n    }\n  }\n}\n","import React from \"react\";\n\nimport { HnListSource } from \"./App\";\nimport { LocalStorageWrapper } from \"./LocalStorageWrapper\";\n\ninterface DataLayerState {\n  frontItems: HnItem[];\n\n  dayItems: HnItem[];\n\n  weekItems: HnItem[];\n\n  monthItems: HnItem[];\n}\n\ninterface DataLayerProps {\n  provideNewItems(items: HnItem[], listType: HnListSource): void;\n}\n\nexport class DataLayer extends React.Component<DataLayerProps, DataLayerState> {\n  refreshData(activeList: HnListSource): void {}\n  constructor(props: DataLayerProps) {\n    super(props);\n\n    this.state = {\n      dayItems: [],\n      frontItems: [],\n      monthItems: [],\n      weekItems: []\n    };\n  }\n\n  render() {\n    // TODO: generalize the comps and events for the data type (don't duplicate)\n    return (\n      <React.Fragment>\n        <LocalStorageWrapper<HnItem[]>\n          dataDidUpdate={item => this.updateNewItems(item, HnListSource.Front)}\n          activeItem={this.state.frontItems}\n          storageName=\"HN-ITEMS\"\n        />\n\n        <LocalStorageWrapper<HnItem[]>\n          dataDidUpdate={item => this.updateNewItems(item, HnListSource.Day)}\n          activeItem={this.state.dayItems}\n          storageName=\"HN-DAY-ITEMS\"\n        />\n\n        <LocalStorageWrapper<HnItem[]>\n          dataDidUpdate={item => this.updateNewItems(item, HnListSource.Week)}\n          activeItem={this.state.weekItems}\n          storageName=\"HN-WEEK-ITEMS\"\n        />\n\n        <LocalStorageWrapper<HnItem[]>\n          dataDidUpdate={item => this.updateNewItems(item, HnListSource.Month)}\n          activeItem={this.state.monthItems}\n          storageName=\"HN-MONTH-ITEMS\"\n        />\n      </React.Fragment>\n    );\n  }\n\n  async getStoryData(id: number) {\n    let item = this.state.frontItems.find(c => c.id === id);\n    if (item !== undefined) {\n      return item;\n    }\n\n    item = this.state.dayItems.find(c => c.id === id);\n    if (item !== undefined) {\n      return item;\n    }\n\n    item = this.state.weekItems.find(c => c.id === id);\n    if (item !== undefined) {\n      return item;\n    }\n\n    item = this.state.monthItems.find(c => c.id === id);\n    if (item !== undefined) {\n      return item;\n    }\n\n    // hit the API for the story data\n    return await this.getStoryFromServer(id);\n  }\n\n  public async getStoryFromServer(id: number) {\n    let url = \"/api/story/\" + id;\n\n    const response = await fetch(url);\n    if (!response.ok) {\n      console.error(response);\n      return undefined;\n    }\n    const data: HnItem | { error: string } = await response.json();\n\n    if (\"error\" in data) {\n      console.error(data);\n      return undefined;\n    }\n\n    console.log(\"hn item from server\", data);\n\n    return data;\n  }\n\n  getPageData(page: string | undefined) {\n    // TODO: add loading step if data is missing -- figure out how to trigger refresh\n    console.log(\"getpage state\", this.state);\n    switch (page) {\n      case \"day\":\n        if (this.state.dayItems.length === 0) {\n          this.loadData(HnListSource.Day);\n        }\n        return this.state.dayItems || [];\n      case \"week\":\n        if (this.state.weekItems.length === 0) {\n          this.loadData(HnListSource.Week);\n        }\n        return this.state.weekItems || [];\n      case \"month\":\n        if (this.state.monthItems.length === 0) {\n          this.loadData(HnListSource.Month);\n        }\n        return this.state.monthItems || [];\n      default:\n        if (this.state.frontItems.length === 0) {\n          this.loadData(HnListSource.Front);\n        }\n        return this.state.frontItems || [];\n    }\n  }\n\n  public async loadData(activeList: HnListSource) {\n    console.log(\"loading data\");\n    let url = \"\";\n    switch (activeList) {\n      case HnListSource.Front:\n        url = \"/topstories/topstories\";\n        break;\n      case HnListSource.Day:\n        url = \"/topstories/day\";\n        break;\n      case HnListSource.Week:\n        url = \"/topstories/week\";\n        break;\n      case HnListSource.Month:\n        url = \"/topstories/month\";\n        break;\n    }\n    const response = await fetch(url);\n    if (!response.ok) {\n      console.error(response);\n      return;\n    }\n    const data: HnItem[] = await response.json();\n\n    // TODO: do not reload data on mount... use a button\n\n    // TODO: take that list of items and set it equal to the current list\n    // TODO: update the items with a merge of sorts instead of overwriting\n\n    console.log(\"hn items\", data);\n\n    this.updateNewItems(data, activeList);\n  }\n\n  updateNewItems(data: HnItem[] | undefined, listType: HnListSource): void {\n    console.log(\"new items2\", data, listType);\n\n    if (data === undefined) {\n      data = [];\n    }\n\n    switch (listType) {\n      case HnListSource.Front:\n        this.setState({ frontItems: data });\n        break;\n      case HnListSource.Day:\n        this.setState({ dayItems: data });\n        break;\n      case HnListSource.Week:\n        this.setState({ weekItems: data });\n        break;\n      case HnListSource.Month:\n        this.setState({ monthItems: data });\n        break;\n    }\n\n    this.props.provideNewItems(data, listType);\n  }\n}\n","import React from \"react\";\nimport { Nav, Navbar, NavItem, Button, Glyphicon } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\n\ninterface HeaderProps {\n  requestNewData(): void;\n}\n\nexport class Header extends React.PureComponent<HeaderProps> {\n  render() {\n    return (\n      <Navbar>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <NavLink to=\"/\">hn-offline</NavLink>\n          </Navbar.Brand>\n        </Navbar.Header>\n        <Nav>\n          <LinkContainer to=\"/day\">\n            <NavItem eventKey={1}>day</NavItem>\n          </LinkContainer>\n\n          <LinkContainer to=\"/week\">\n            <NavItem eventKey={2}>week</NavItem>\n          </LinkContainer>\n\n          <LinkContainer to=\"/month\">\n            <NavItem eventKey={3}>month</NavItem>\n          </LinkContainer>\n        </Nav>\n\n        <Navbar.Form pullRight>\n          <Button bsStyle=\"primary\" onClick={() => this.props.requestNewData()}>\n            <Glyphicon glyph=\"refresh\" />\n          </Button>\n        </Navbar.Form>\n      </Navbar>\n    );\n  }\n}\n","export function getDomain(url: string | undefined) {\n  if (url === undefined) {\n    return \"\";\n  }\n  var matches = url.match(/^https?\\:\\/\\/([^\\/?#]+)(?:[\\/?#]|$)/i);\n  var domain = matches && matches[1];\n  return domain;\n}\n","export function timeSince(date: number) {\n  var seconds = Math.floor(new Date().getTime() / 1000 - date);\n  var interval = Math.floor(seconds / 31536000);\n  if (interval > 1) {\n    return interval + \" years\";\n  }\n  interval = Math.floor(seconds / 2592000);\n  if (interval > 1) {\n    return interval + \" months\";\n  }\n  interval = Math.floor(seconds / 86400);\n  if (interval > 1) {\n    return interval + \" days\";\n  }\n  interval = Math.floor(seconds / 3600);\n  if (interval > 1) {\n    return interval + \" hours\";\n  }\n  interval = Math.floor(seconds / 60);\n  if (interval > 1) {\n    return interval + \" minutes\";\n  }\n  return Math.floor(seconds) + \" seconds\";\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { getDomain } from \"./getDomain\";\nimport { timeSince } from \"./timeSince\";\nimport { Glyphicon } from \"react-bootstrap\";\n\nexport interface HnStoryProps {\n  data: HnItem;\n}\n\nexport class HnListItem extends React.Component<HnStoryProps> {\n  render() {\n    const story = this.props.data;\n    return (\n      <div>\n        <p>\n          <a href={story.url}>{story.title}</a>\n        </p>\n        <p>\n          <span>{story.score + \" | \"}</span>\n          <Link to={\"/story/\" + story.id}>\n            <span>\n              <Glyphicon glyph=\"comment\" /> {\" \" + story.descendants}\n            </span>\n          </Link>\n          <span>{\" | \" + timeSince(story.time) + \" ago\"}</span>\n          <span>{\" | \" + getDomain(story.url)}</span>\n        </p>\n      </div>\n    );\n  }\n}\n","import \"./App.css\";\n\nimport * as Sentry from \"@sentry/browser\";\nimport localForage from \"localforage\";\nimport _ from \"lodash\";\nimport React, { RefObject } from \"react\";\nimport { Route, RouteComponentProps, Switch, withRouter } from \"react-router\";\n\nimport { DataLayer } from \"./DataLayer\";\nimport { Header } from \"./Header\";\nimport { HnStoryList } from \"./HnStoryList\";\nimport { HnStoryPage } from \"./HnStoryPage\";\n\ninterface StoryPageProps extends RouteComponentProps<{ id: string }> {}\ninterface AppPageProps extends RouteComponentProps<{ page?: string }> {}\n\nclass _App extends React.Component<AppPageProps, AppState> {\n  dataLayer: RefObject<DataLayer>;\n\n  static getDerivedStateFromProps(props: AppPageProps, state: AppState) {\n    let listType: HnListSource;\n    switch (props.match.params.page) {\n      case \"day\":\n        listType = HnListSource.Day;\n        break;\n\n      case \"week\":\n        listType = HnListSource.Week;\n        break;\n\n      case \"month\":\n        listType = HnListSource.Month;\n        break;\n\n      default:\n        listType = HnListSource.Front;\n        break;\n    }\n\n    console.log(\"derived state\", props.match.params.page, listType);\n\n    return { ...state, activeList: listType };\n  }\n\n  constructor(props: AppPageProps) {\n    super(props);\n\n    this.state = {\n      items: [],\n      allItems: [],\n      activeList: HnListSource.Front,\n      error: undefined\n    };\n\n    this.dataLayer = React.createRef();\n\n    this.updateActiveDataStore = this.updateActiveDataStore.bind(this);\n    this.newItemsProvided = this.newItemsProvided.bind(this);\n  }\n\n  updateActiveDataStore(items: HnItem[], isActive: boolean) {\n    if (isActive) {\n      this.setState({ items });\n    }\n\n    // this is needed to ensure that state updates are atomic\n    // all new items need to be joined together... cannot skip updatesÍ\n    this.setState(prevState => {\n      let allItems = _.cloneDeep(prevState.allItems).concat(items);\n      allItems = _.uniqBy(allItems, c => c.id);\n      console.log(\"new all itemS\", allItems);\n      return { allItems };\n    });\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    this.setState({ error });\n    Sentry.withScope(scope => {\n      Object.keys(errorInfo).forEach(key => {\n        scope.setExtra(key, errorInfo[key]);\n      });\n      Sentry.captureException(error);\n    });\n\n    // clear out all localForage stuff to be save\n    localForage.clear();\n  }\n\n  render() {\n    console.log(\"render state\", this.state);\n\n    if (this.state.error !== undefined) {\n      return (\n        <div>\n          <p>an error occurred, refresh the page</p>\n          <p>\n            unfortunately, your local data was cleared to prevent corruption\n          </p>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <DataLayer\n          ref={this.dataLayer}\n          provideNewItems={this.newItemsProvided}\n        />\n\n        <Header\n          requestNewData={() => {\n            this.dataLayer.current!.loadData(this.state.activeList);\n          }}\n        />\n\n        <Switch>\n          <Route\n            path={\"/story/:id\"}\n            exact\n            render={(props: StoryPageProps) => (\n              <HnStoryPage\n                id={+props.match.params.id}\n                dataLayer={this.dataLayer.current}\n                history={props.history}\n                key={+props.match.params.id}\n              />\n            )}\n          />\n          <Route\n            path=\"/:page?\"\n            render={(props: AppPageProps) => (\n              <HnStoryList\n                items={\n                  this.dataLayer.current === null\n                    ? []\n                    : this.dataLayer.current.getPageData(\n                        props.match.params.page\n                      )\n                }\n              />\n            )}\n          />\n        </Switch>\n      </div>\n    );\n  }\n\n  newItemsProvided(items: HnItem[], listType: HnListSource): void {\n    if (listType === this.state.activeList) {\n      this.setState({ items });\n    }\n  }\n}\n\nexport const App = withRouter(_App);\n\nexport enum HnListSource {\n  Front,\n  Day,\n  Week,\n  Month\n}\n\ninterface AppState {\n  items: HnItem[];\n  allItems: HnItem[];\n\n  error: any;\n\n  activeList: HnListSource;\n}\n","import React from \"react\";\n\nimport { HnListItem } from \"./HnListItem\";\n\ninterface HnStoryListProps {\n  items: HnItem[];\n}\n\nexport class HnStoryList extends React.Component<HnStoryListProps> {\n  constructor(props: HnStoryListProps) {\n    super(props);\n    this.state = {\n      items: []\n    };\n  }\n  render() {\n    return (\n      <div>\n        {this.props.items.map(item => (\n          <HnListItem data={item} key={item.id} />\n        ))}\n      </div>\n    );\n  }\n}\n","import { Card } from \"@blueprintjs/core\";\nimport React from \"react\";\nimport { timeSince } from \"./timeSince\";\n\nexport interface HnCommentProps {\n  comment: KidsObj3 | null;\n  depth: number;\n}\n\ninterface HnCommentState {\n  isOpen: boolean;\n}\n\nexport class HnComment extends React.Component<HnCommentProps, HnCommentState> {\n  constructor(props: HnCommentProps) {\n    super(props);\n\n    this.state = {\n      isOpen: true\n    };\n  }\n\n  render() {\n    const comment = this.props.comment;\n\n    if (comment === null) {\n      return null;\n    }\n\n    const childComments = comment.kidsObj || [];\n    const commentText = comment.text || \"\";\n\n    if (\n      comment.deleted &&\n      (comment.kidsObj === undefined || comment.kidsObj!.length === 0)\n    ) {\n      // kick out nothing if the comment was deleted and has no children\n      return null;\n    }\n\n    // TODO: rewrite links to hn to open in this site instead\n\n    const childrenToShow = !this.state.isOpen ? null : (\n      <React.Fragment>\n        <p\n          className=\"comment\"\n          dangerouslySetInnerHTML={{ __html: commentText }}\n        />\n\n        {childComments.map(childComm => (\n          <HnComment\n            key={comment.id + \"-\" + childComm.id}\n            comment={childComm}\n            depth={this.props.depth + 1}\n          />\n        ))}\n      </React.Fragment>\n    );\n\n    return (\n      <Card\n        interactive\n        onClick={e => this.handleCardClick(e)}\n        style={{\n          paddingLeft: 12,\n          width: \"100%\"\n        }}\n      >\n        <p>\n          {comment.by}\n          {\" | \"}\n          {timeSince(comment.time)}\n          {\" ago\"}\n        </p>\n\n        {childrenToShow}\n      </Card>\n    );\n  }\n  handleCardClick(e: React.MouseEvent<HTMLDivElement>): void {\n    // this is to prevent other cards from collapsing too\n    e.stopPropagation();\n\n    // dont update state if click was A link\n    if ((e.target as any).tagName === \"A\") {\n      return;\n    }\n\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n}\n","import { History } from \"history\";\nimport React from \"react\";\n\nimport { DataLayer } from \"./DataLayer\";\nimport { getDomain } from \"./getDomain\";\nimport { HnComment } from \"./HnComment\";\nimport { timeSince } from \"./timeSince\";\n\ninterface HnStoryPageState {\n  data: HnItem | undefined;\n}\n\nexport interface HnStoryPageProps {\n  dataLayer: DataLayer | null;\n  id: number;\n  history: History;\n}\n\nexport class HnStoryPage extends React.Component<\n  HnStoryPageProps,\n  HnStoryPageState\n> {\n  constructor(props: HnStoryPageProps) {\n    super(props);\n\n    this.state = {\n      data: undefined\n    };\n\n    this.anchorClickHandler = this.anchorClickHandler.bind(this);\n  }\n\n  render() {\n    if (this.state.data === undefined) {\n      return null;\n    }\n\n    const storyData = this.state.data;\n\n    const comments = storyData.kidsObj || [];\n    return (\n      <div>\n        <h2>\n          <a href={storyData.url}>{storyData.title}</a>\n        </h2>\n        <h4>\n          <span>{storyData.by}</span>\n          <span>{\" | \"}</span>\n          <span>{storyData.score}</span>\n          <span>{\" | \"}</span>\n          <span>{timeSince(storyData.time)} ago</span>\n          <span>{\" | \"}</span>\n          <span>{getDomain(storyData.url)}</span>\n        </h4>\n        {storyData.text !== undefined && (\n          <p\n            className=\"top-text\"\n            dangerouslySetInnerHTML={{ __html: storyData.text }}\n          />\n        )}\n\n        {comments.map(comment => (\n          <HnComment\n            key={(comment || { id: 0 }).id}\n            comment={comment}\n            depth={0}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n\n    // set the data initially -- kick off async request if needed\n    this.updateDataFromDataLayer();\n    document.body.addEventListener(\"click\", this.anchorClickHandler);\n  }\n\n  componentWillUnmount() {\n    document.body.removeEventListener(\"click\", this.anchorClickHandler);\n  }\n  anchorClickHandler(e: any) {\n    if (e.target.tagName !== \"A\") {\n      return;\n    }\n\n    // have a link\n\n    const link = e.target as HTMLAnchorElement;\n\n    const regex = /https?:\\/\\/news\\.ycombinator\\.com\\/item\\?id=(\\d+)/;\n    const matches = link.href.match(regex);\n\n    if (matches === null) {\n      return;\n    }\n\n    // this will navigate to the new page\n    this.props.history.push(\"/story/\" + matches[1]);\n\n    e.preventDefault();\n    return false;\n  }\n\n  private async updateDataFromDataLayer() {\n    const storyData = await this.getStoryData(this.props.id);\n\n    this.setState({ data: storyData });\n  }\n\n  componentDidUpdate(prevProps: HnStoryPageProps) {\n    // load the story once the data layer is available\n    if (prevProps.dataLayer === null && this.props.dataLayer !== null) {\n      this.updateDataFromDataLayer();\n    }\n  }\n\n  private async getStoryData(id: number): Promise<HnItem | undefined> {\n    return this.props.dataLayer === null\n      ? undefined\n      : await this.props.dataLayer.getStoryData(id);\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap-theme.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport * as Sentry from \"@sentry/browser\";\n\nSentry.init({\n  dsn: \"https://d8e8092157294c86b5014343cede60e6@sentry.io/1362584\"\n});\n\nReactDOM.render(\n  <BrowserRouter>\n    <Route path={\"/:page?\"}>\n      <App />\n    </Route>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}