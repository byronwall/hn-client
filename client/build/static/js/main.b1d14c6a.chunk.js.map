{"version":3,"sources":["LocalStorageWrapper.tsx","DataLayer.tsx","Header.tsx","getDomain.tsx","timeSince.tsx","HnListItem.tsx","App.tsx","HnStoryList.tsx","HnComment.tsx","HnStoryPage.tsx","serviceWorker.ts","index.tsx"],"names":["LocalStorageWrapper","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","item","undefined","inherits","createClass","key","value","_this2","itemCompressed","localStorage","getItem","storageName","LZString","decompress","removeItem","setState","dataDidUpdate","obj","JSON","parse","prevProps","prevState","_this3","_","isEqual","activeItem","console","log","strToStore","stringify","strToStoreCompressed","compress","setItem","React","Component","DataLayer","dayItems","frontItems","monthItems","weekItems","activeList","react_default","a","createElement","Fragment","LocalStorageWrapper_LocalStorageWrapper","updateNewItems","HnListSource","Front","Day","Week","Month","_getStoryData","asyncToGenerator","regenerator_default","mark","_callee","id","wrap","_context","prev","next","find","c","abrupt","getStoryFromServer","sent","stop","_x","apply","arguments","_getStoryFromServer","_callee2","url","response","data","_context2","fetch","ok","error","json","_x2","page","length","loadData","_loadData","_callee3","_context3","t0","_x3","listType","provideNewItems","Header","_React$PureComponent","Navbar","Brand","NavLink","to","Nav","lib","NavItem","eventKey","Form","pullRight","Button","bsStyle","onClick","requestNewData","Glyphicon","glyph","PureComponent","getDomain","matches","match","timeSince","date","seconds","Math","floor","Date","getTime","interval","HnListItem","story","href","title","score","Link","descendants","time","HnStoryList","items","map","HnListItem_HnListItem","HnComment","isOpen","childComments","comment","kidsObj","commentText","text","deleted","childrenToShow","dangerouslySetInnerHTML","__html","childComm","depth","card","interactive","e","handleCardClick","style","paddingLeft","width","by","stopPropagation","HnStoryPage","storyData","comments","HnComment_HnComment","window","scrollTo","updateDataFromDataLayer","_updateDataFromDataLayer","getStoryData","dataLayer","_App","allItems","createRef","updateActiveDataStore","bind","assertThisInitialized","newItemsProvided","params","objectSpread","isActive","cloneDeep","concat","uniqBy","DataLayer_DataLayer","ref","Header_Header","current","Switch","es_Route","path","exact","render","HnStoryPage_HnStoryPage","HnStoryList_HnStoryList","getPageData","App","withRouter","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","Sentry","dsn","ReactDOM","BrowserRouter","Route","src_App_App","document","getElementById","URL","process","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b1d14c6a.chunk.js","sourcesContent":["import _ from \"lodash\";\nimport React from \"react\";\nimport LZString from \"lz-string\";\n\nexport interface LocalStorageWrapperProps<TDataType> {\n  storageName: string;\n  activeItem: TDataType;\n\n  dataDidUpdate(item: TDataType | undefined): void;\n}\n\nexport interface LocalStorageWrapperState<TDataType> {\n  item: TDataType | undefined;\n}\n\nexport class LocalStorageWrapper<TDataType> extends React.Component<\n  LocalStorageWrapperProps<TDataType>,\n  LocalStorageWrapperState<TDataType>\n> {\n  constructor(props: LocalStorageWrapperProps<TDataType>) {\n    super(props);\n    this.state = {\n      item: undefined\n    };\n  }\n  render() {\n    return null;\n  }\n  componentDidMount() {\n    // check localStorage for obj\n    const itemCompressed = localStorage.getItem(this.props.storageName);\n    // decompress\n    if (itemCompressed === undefined || itemCompressed === null) {\n      this.setState({ item: undefined }, () =>\n        this.props.dataDidUpdate(undefined)\n      );\n      return;\n    }\n    const item = LZString.decompress(itemCompressed);\n    // seems to be some sort of corruption on load.. clear localStorage\n    if (item === null) {\n      localStorage.removeItem(this.props.storageName);\n      this.setState({ item: undefined }, () =>\n        this.props.dataDidUpdate(undefined)\n      );\n      return;\n    }\n    // parse JSON for what was found\n    const obj = JSON.parse(item) as TDataType;\n    this.setState({ item: obj }, () => this.props.dataDidUpdate(obj));\n  }\n  componentDidUpdate(\n    prevProps: LocalStorageWrapperProps<TDataType>,\n    prevState: LocalStorageWrapperState<TDataType>\n  ) {\n    // if activeItem changed... save to local storage.. update self\n    if (!_.isEqual(prevProps.activeItem, this.props.activeItem)) {\n      // do a check for undefined and kick out?\n      if (this.props.activeItem === undefined) {\n        return;\n      }\n      // TODO: this save should only happen when the data is new\n      if (_.isEqual(this.state.item, this.props.activeItem)) {\n        // do not need to save or update... it is the same as current state\n        // happens when loaded\n        return;\n      }\n      console.log(\"save item\", this.props.activeItem);\n      // compress and save\n      const strToStore = JSON.stringify(this.props.activeItem);\n      const strToStoreCompressed = LZString.compress(strToStore);\n      localStorage.setItem(this.props.storageName, strToStoreCompressed);\n      this.setState({ item: this.props.activeItem }, () =>\n        this.props.dataDidUpdate(this.props.activeItem)\n      );\n    }\n  }\n}\n","import React from \"react\";\n\nimport { HnListSource } from \"./App\";\nimport { LocalStorageWrapper } from \"./LocalStorageWrapper\";\n\ninterface DataLayerState {\n  frontItems: HnItem[];\n\n  dayItems: HnItem[];\n\n  weekItems: HnItem[];\n\n  monthItems: HnItem[];\n}\n\ninterface DataLayerProps {\n  provideNewItems(items: HnItem[], listType: HnListSource): void;\n}\n\nexport class DataLayer extends React.Component<DataLayerProps, DataLayerState> {\n  refreshData(activeList: HnListSource): void {}\n  constructor(props: DataLayerProps) {\n    super(props);\n\n    this.state = {\n      dayItems: [],\n      frontItems: [],\n      monthItems: [],\n      weekItems: []\n    };\n  }\n\n  render() {\n    // TODO: generalize the comps and events for the data type (don't duplicate)\n    return (\n      <React.Fragment>\n        <LocalStorageWrapper<HnItem[]>\n          dataDidUpdate={item => this.updateNewItems(item, HnListSource.Front)}\n          activeItem={this.state.frontItems}\n          storageName=\"HN-ITEMS\"\n        />\n\n        <LocalStorageWrapper<HnItem[]>\n          dataDidUpdate={item => this.updateNewItems(item, HnListSource.Day)}\n          activeItem={this.state.dayItems}\n          storageName=\"HN-DAY-ITEMS\"\n        />\n\n        <LocalStorageWrapper<HnItem[]>\n          dataDidUpdate={item => this.updateNewItems(item, HnListSource.Week)}\n          activeItem={this.state.weekItems}\n          storageName=\"HN-WEEK-ITEMS\"\n        />\n\n        <LocalStorageWrapper<HnItem[]>\n          dataDidUpdate={item => this.updateNewItems(item, HnListSource.Month)}\n          activeItem={this.state.monthItems}\n          storageName=\"HN-MONTH-ITEMS\"\n        />\n      </React.Fragment>\n    );\n  }\n\n  async getStoryData(id: number) {\n    let item = this.state.frontItems.find(c => c.id === id);\n    if (item !== undefined) {\n      return item;\n    }\n\n    item = this.state.dayItems.find(c => c.id === id);\n    if (item !== undefined) {\n      return item;\n    }\n\n    item = this.state.weekItems.find(c => c.id === id);\n    if (item !== undefined) {\n      return item;\n    }\n\n    item = this.state.monthItems.find(c => c.id === id);\n    if (item !== undefined) {\n      return item;\n    }\n\n    // hit the API for the story data\n    return await this.getStoryFromServer(id);\n  }\n\n  public async getStoryFromServer(id: number) {\n    let url = \"/api/story/\" + id;\n\n    const response = await fetch(url);\n    if (!response.ok) {\n      console.error(response);\n      return undefined;\n    }\n    const data: HnItem | { error: string } = await response.json();\n\n    if (\"error\" in data) {\n      console.error(data);\n      return undefined;\n    }\n\n    console.log(\"hn item from server\", data);\n\n    return data;\n  }\n\n  getPageData(page: string | undefined) {\n    // TODO: add loading step if data is missing -- figure out how to trigger refresh\n    console.log(\"getpage state\", this.state);\n    switch (page) {\n      case \"day\":\n        if (this.state.dayItems.length === 0) {\n          this.loadData(HnListSource.Day);\n        }\n        return this.state.dayItems || [];\n      case \"week\":\n        if (this.state.weekItems.length === 0) {\n          this.loadData(HnListSource.Week);\n        }\n        return this.state.weekItems || [];\n      case \"month\":\n        if (this.state.monthItems.length === 0) {\n          this.loadData(HnListSource.Month);\n        }\n        return this.state.monthItems || [];\n      default:\n        if (this.state.frontItems.length === 0) {\n          this.loadData(HnListSource.Front);\n        }\n        return this.state.frontItems || [];\n    }\n  }\n\n  public async loadData(activeList: HnListSource) {\n    console.log(\"loading data\");\n    let url = \"\";\n    switch (activeList) {\n      case HnListSource.Front:\n        url = \"/topstories/topstories\";\n        break;\n      case HnListSource.Day:\n        url = \"/topstories/day\";\n        break;\n      case HnListSource.Week:\n        url = \"/topstories/week\";\n        break;\n      case HnListSource.Month:\n        url = \"/topstories/month\";\n        break;\n    }\n    const response = await fetch(url);\n    if (!response.ok) {\n      console.error(response);\n      return;\n    }\n    const data: HnItem[] = await response.json();\n\n    // TODO: do not reload data on mount... use a button\n\n    // TODO: take that list of items and set it equal to the current list\n    // TODO: update the items with a merge of sorts instead of overwriting\n\n    console.log(\"hn items\", data);\n\n    this.updateNewItems(data, activeList);\n  }\n\n  updateNewItems(data: HnItem[] | undefined, listType: HnListSource): void {\n    console.log(\"new items2\", data, listType);\n\n    if (data === undefined) {\n      data = [];\n    }\n\n    switch (listType) {\n      case HnListSource.Front:\n        this.setState({ frontItems: data });\n        break;\n      case HnListSource.Day:\n        this.setState({ dayItems: data });\n        break;\n      case HnListSource.Week:\n        this.setState({ weekItems: data });\n        break;\n      case HnListSource.Month:\n        this.setState({ monthItems: data });\n        break;\n    }\n\n    this.props.provideNewItems(data, listType);\n  }\n}\n","import React from \"react\";\nimport { Nav, Navbar, NavItem, Button, Glyphicon } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\n\ninterface HeaderProps {\n  requestNewData(): void;\n}\n\nexport class Header extends React.PureComponent<HeaderProps> {\n  render() {\n    return (\n      <Navbar>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <NavLink to=\"/\">hn-offline</NavLink>\n          </Navbar.Brand>\n        </Navbar.Header>\n        <Nav>\n          <LinkContainer to=\"/day\">\n            <NavItem eventKey={1}>day</NavItem>\n          </LinkContainer>\n\n          <LinkContainer to=\"/week\">\n            <NavItem eventKey={2}>week</NavItem>\n          </LinkContainer>\n\n          <LinkContainer to=\"/month\">\n            <NavItem eventKey={3}>month</NavItem>\n          </LinkContainer>\n        </Nav>\n\n        <Navbar.Form pullRight>\n          <Button bsStyle=\"primary\" onClick={() => this.props.requestNewData()}>\n            <Glyphicon glyph=\"refresh\" />\n          </Button>\n        </Navbar.Form>\n      </Navbar>\n    );\n  }\n}\n","export function getDomain(url: string | undefined) {\n  if (url === undefined) {\n    return \"\";\n  }\n  var matches = url.match(/^https?\\:\\/\\/([^\\/?#]+)(?:[\\/?#]|$)/i);\n  var domain = matches && matches[1];\n  return domain;\n}\n","export function timeSince(date: number) {\n  var seconds = Math.floor(new Date().getTime() / 1000 - date);\n  var interval = Math.floor(seconds / 31536000);\n  if (interval > 1) {\n    return interval + \" years\";\n  }\n  interval = Math.floor(seconds / 2592000);\n  if (interval > 1) {\n    return interval + \" months\";\n  }\n  interval = Math.floor(seconds / 86400);\n  if (interval > 1) {\n    return interval + \" days\";\n  }\n  interval = Math.floor(seconds / 3600);\n  if (interval > 1) {\n    return interval + \" hours\";\n  }\n  interval = Math.floor(seconds / 60);\n  if (interval > 1) {\n    return interval + \" minutes\";\n  }\n  return Math.floor(seconds) + \" seconds\";\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { getDomain } from \"./getDomain\";\nimport { timeSince } from \"./timeSince\";\nimport { Glyphicon } from \"react-bootstrap\";\n\nexport interface HnStoryProps {\n  data: HnItem;\n}\n\nexport class HnListItem extends React.Component<HnStoryProps> {\n  render() {\n    const story = this.props.data;\n    return (\n      <div>\n        <p>\n          <a href={story.url}>{story.title}</a>\n        </p>\n        <p>\n          <span>{story.score + \" | \"}</span>\n          <Link to={\"/story/\" + story.id}>\n            <span>\n              <Glyphicon glyph=\"comment\" /> {\" \" + story.descendants}\n            </span>\n          </Link>\n          <span>{\" | \" + timeSince(story.time) + \" ago\"}</span>\n          <span>{\" | \" + getDomain(story.url)}</span>\n        </p>\n      </div>\n    );\n  }\n}\n","import \"./App.css\";\n\nimport _ from \"lodash\";\nimport React, { RefObject } from \"react\";\nimport { Route, RouteComponentProps, Switch, withRouter } from \"react-router\";\n\nimport { DataLayer } from \"./DataLayer\";\nimport { Header } from \"./Header\";\nimport { HnStoryList } from \"./HnStoryList\";\nimport { HnStoryPage } from \"./HnStoryPage\";\n\ninterface StoryPageProps extends RouteComponentProps<{ id: string }> {}\ninterface AppPageProps extends RouteComponentProps<{ page?: string }> {}\n\nclass _App extends React.Component<AppPageProps, AppState> {\n  dataLayer: RefObject<DataLayer>;\n\n  static getDerivedStateFromProps(props: AppPageProps, state: AppState) {\n    let listType: HnListSource;\n    switch (props.match.params.page) {\n      case \"day\":\n        listType = HnListSource.Day;\n        break;\n\n      case \"week\":\n        listType = HnListSource.Week;\n        break;\n\n      case \"month\":\n        listType = HnListSource.Month;\n        break;\n\n      default:\n        listType = HnListSource.Front;\n        break;\n    }\n\n    console.log(\"derived state\", props.match.params.page, listType);\n\n    return { ...state, activeList: listType };\n  }\n\n  constructor(props: AppPageProps) {\n    super(props);\n\n    this.state = {\n      items: [],\n      allItems: [],\n      activeList: HnListSource.Front\n    };\n\n    this.dataLayer = React.createRef();\n\n    this.updateActiveDataStore = this.updateActiveDataStore.bind(this);\n    this.newItemsProvided = this.newItemsProvided.bind(this);\n  }\n\n  updateActiveDataStore(items: HnItem[], isActive: boolean) {\n    if (isActive) {\n      this.setState({ items });\n    }\n\n    // this is needed to ensure that state updates are atomic\n    // all new items need to be joined together... cannot skip updatesÍ\n    this.setState(prevState => {\n      let allItems = _.cloneDeep(prevState.allItems).concat(items);\n      allItems = _.uniqBy(allItems, c => c.id);\n      console.log(\"new all itemS\", allItems);\n      return { allItems };\n    });\n  }\n\n  render() {\n    console.log(\"render state\", this.state);\n    return (\n      <div>\n        <DataLayer\n          ref={this.dataLayer}\n          provideNewItems={this.newItemsProvided}\n        />\n\n        <Header\n          requestNewData={() => {\n            this.dataLayer.current!.loadData(this.state.activeList);\n          }}\n        />\n\n        <Switch>\n          <Route\n            path={\"/story/:id\"}\n            exact\n            render={(props: StoryPageProps) => (\n              <HnStoryPage\n                id={+props.match.params.id}\n                dataLayer={this.dataLayer.current}\n              />\n            )}\n          />\n          <Route\n            path=\"/:page?\"\n            render={(props: AppPageProps) => (\n              <HnStoryList\n                items={\n                  this.dataLayer.current === null\n                    ? []\n                    : this.dataLayer.current.getPageData(\n                        props.match.params.page\n                      )\n                }\n              />\n            )}\n          />\n        </Switch>\n      </div>\n    );\n  }\n\n  newItemsProvided(items: HnItem[], listType: HnListSource): void {\n    if (listType === this.state.activeList) {\n      this.setState({ items });\n    }\n  }\n}\n\nexport const App = withRouter(_App);\n\nexport enum HnListSource {\n  Front,\n  Day,\n  Week,\n  Month\n}\n\ninterface AppState {\n  items: HnItem[];\n  allItems: HnItem[];\n\n  activeList: HnListSource;\n}\n","import React from \"react\";\n\nimport { HnListItem } from \"./HnListItem\";\n\ninterface HnStoryListProps {\n  items: HnItem[];\n}\n\nexport class HnStoryList extends React.Component<HnStoryListProps> {\n  constructor(props: HnStoryListProps) {\n    super(props);\n    this.state = {\n      items: []\n    };\n  }\n  render() {\n    return (\n      <div>\n        {this.props.items.map(item => (\n          <HnListItem data={item} key={item.id} />\n        ))}\n      </div>\n    );\n  }\n}\n","import { Card } from \"@blueprintjs/core\";\nimport React from \"react\";\nimport { timeSince } from \"./timeSince\";\n\nexport interface HnCommentProps {\n  comment: KidsObj3;\n  depth: number;\n}\n\ninterface HnCommentState {\n  isOpen: boolean;\n}\n\nexport class HnComment extends React.Component<HnCommentProps, HnCommentState> {\n  constructor(props: HnCommentProps) {\n    super(props);\n\n    this.state = {\n      isOpen: true\n    };\n  }\n\n  render() {\n    const childComments = this.props.comment.kidsObj || [];\n    const commentText = this.props.comment.text || \"\";\n\n    const comment = this.props.comment;\n\n    if (\n      this.props.comment.deleted &&\n      (this.props.comment.kidsObj === undefined ||\n        comment.kidsObj!.length === 0)\n    ) {\n      // kick out nothing if the comment was deleted and has no children\n      return null;\n    }\n\n    // TODO: rewrite links to hn to open in this site instead\n\n    const childrenToShow = !this.state.isOpen ? null : (\n      <React.Fragment>\n        <p dangerouslySetInnerHTML={{ __html: commentText }} />\n\n        {childComments.map(childComm => (\n          <HnComment\n            key={this.props.comment.id + \"-\" + childComm.id}\n            comment={childComm}\n            depth={this.props.depth + 1}\n          />\n        ))}\n      </React.Fragment>\n    );\n\n    return (\n      <Card\n        interactive\n        onClick={e => this.handleCardClick(e)}\n        style={{\n          paddingLeft: 12,\n          width: \"100%\"\n        }}\n      >\n        <p>\n          {this.props.comment.by}\n          {\" | \"}\n          {timeSince(this.props.comment.time)}\n          {\" ago\"}\n        </p>\n\n        {childrenToShow}\n      </Card>\n    );\n  }\n  handleCardClick(e: React.MouseEvent<HTMLDivElement>): void {\n    // this is to prevent other cards from collapsing too\n    e.stopPropagation();\n\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n}\n","import React from \"react\";\nimport { HnComment } from \"./HnComment\";\nimport { timeSince } from \"./timeSince\";\nimport { getDomain } from \"./getDomain\";\nimport { DataLayer } from \"./DataLayer\";\n\ninterface HnStoryPageState {\n  data: HnItem | undefined;\n}\n\nexport interface HnStoryPageProps {\n  dataLayer: DataLayer | null;\n  id: number;\n}\n\nexport class HnStoryPage extends React.Component<\n  HnStoryPageProps,\n  HnStoryPageState\n> {\n  constructor(props: HnStoryPageProps) {\n    super(props);\n\n    this.state = {\n      data: undefined\n    };\n  }\n\n  render() {\n    if (this.state.data === undefined) {\n      return null;\n    }\n\n    const storyData = this.state.data;\n\n    const comments = storyData.kidsObj || [];\n    return (\n      <div>\n        <h2>\n          <a href={storyData.url}>{storyData.title}</a>\n        </h2>\n        <h4>\n          <span>{storyData.by}</span>\n          <span>{\" | \"}</span>\n          <span>{storyData.score}</span>\n          <span>{\" | \"}</span>\n          <span>{timeSince(storyData.time)} ago</span>\n          <span>{\" | \"}</span>\n          <span>{getDomain(storyData.url)}</span>\n        </h4>\n\n        {storyData.text !== undefined && (\n          <p dangerouslySetInnerHTML={{ __html: storyData.text }} />\n        )}\n\n        {comments.map(comment => (\n          <HnComment key={comment.id} comment={comment} depth={0} />\n        ))}\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n\n    // set the data initially -- kick off async request if needed\n    this.updateDataFromDataLayer();\n  }\n\n  private async updateDataFromDataLayer() {\n    const storyData = await this.getStoryData(this.props.id);\n\n    this.setState({ data: storyData });\n  }\n\n  componentDidUpdate(prevProps: HnStoryPageProps) {\n    // load the story once the data layer is available\n    if (prevProps.dataLayer === null && this.props.dataLayer !== null) {\n      this.updateDataFromDataLayer();\n    }\n  }\n\n  private async getStoryData(id: number): Promise<HnItem | undefined> {\n    return this.props.dataLayer === null\n      ? undefined\n      : await this.props.dataLayer.getStoryData(id);\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap-theme.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport * as Sentry from \"@sentry/browser\";\n\nSentry.init({\n  dsn: \"https://d8e8092157294c86b5014343cede60e6@sentry.io/1362584\"\n});\n\nReactDOM.render(\n  <BrowserRouter>\n    <Route path={\"/:page?\"}>\n      <App />\n    </Route>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}