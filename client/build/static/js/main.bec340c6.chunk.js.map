{"version":3,"sources":["LocalStorageWrapper.tsx","DataLayer.tsx","Header.tsx","getDomain.tsx","timeSince.tsx","HnListItem.tsx","App.tsx","HnStoryList.tsx","HnComment.tsx","HnCommentList.tsx","HnStoryPage.tsx","serviceWorker.ts","index.tsx"],"names":["LocalStorageWrapper","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","item","undefined","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","itemCompressed","obj","_this2","wrap","_context","prev","next","localForage","getItem","storageName","sent","setState","dataDidUpdate","abrupt","LZString","decompress","removeItem","JSON","parse","stop","apply","arguments","prevProps","prevState","_this3","_","isEqual","activeItem","console","log","strToStore","stringify","strToStoreCompressed","compress","setItem","React","Component","DataLayer","dayItems","frontItems","monthItems","weekItems","activeList","react_default","createElement","Fragment","LocalStorageWrapper_LocalStorageWrapper","updateNewItems","HnListSource","Front","Day","Week","Month","_getStoryData","id","find","c","getStoryFromServer","_x","_getStoryFromServer","_callee2","url","response","data","_context2","fetch","ok","error","json","_x2","page","length","loadData","_loadData","_callee3","_context3","t0","_x3","listType","provideNewItems","Header","_React$PureComponent","Navbar","Brand","NavLink","to","Nav","lib","NavItem","eventKey","Form","pullRight","Button","bsStyle","onClick","requestNewData","Glyphicon","glyph","PureComponent","getDomain","matches","match","timeSince","date","seconds","Math","floor","Date","getTime","interval","HnListItem","story","commentCount","Link","descendants","storyLinkEl","title","href","score","time","HnStoryList","items","map","HnListItem_HnListItem","colors","HnComment","isOpen","expandSelf","divRef","createRef","current","comment","childComments","kidsObj","commentText","text","deleted","childrenToShow","className","dangerouslySetInnerHTML","__html","HnCommentList_HnCommentList","canExpand","depth","ref","classNames","collapsed","e","handleCardClick","style","paddingLeft","marginLeft","borderLeftColor","borderLeftWidth","borderRight","paddingRight","fontWeight","by","stopPropagation","target","tagName","gutterRatio","pageX","offsetLeft","window","innerWidth","scrollToNextChild","HnCommentList","childRefs","forEach","filter","comm","childComm","index","HnComment_HnComment","nextSib","refObj","scrollIntoView","getDivRef","behavior","actions","_ref","el","top","left","scrollTo","block","inline","scrollMode","HnStoryPage","anchorClickHandler","bind","assertThisInitialized","storyData","comments","updateDataFromDataLayer","document","body","addEventListener","removeEventListener","history","push","preventDefault","_updateDataFromDataLayer","getStoryData","dataLayer","_App","allItems","updateActiveDataStore","newItemsProvided","params","objectSpread","isActive","cloneDeep","concat","uniqBy","errorInfo","Sentry","scope","keys","setExtra","clear","DataLayer_DataLayer","Header_Header","Switch","es_Route","path","exact","render","HnStoryPage_HnStoryPage","HnStoryList_HnStoryList","getPageData","App","withRouter","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","smoothscroll","polyfill","dsn","ReactDOM","BrowserRouter","Route","src_App_App","getElementById","URL","process","origin","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bec340c6.chunk.js","sourcesContent":["import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport LZString from \"lz-string\";\r\nimport localForage from \"localforage\";\r\n\r\nexport interface LocalStorageWrapperProps<TDataType> {\r\n  storageName: string;\r\n  activeItem: TDataType;\r\n\r\n  dataDidUpdate(item: TDataType | undefined): void;\r\n}\r\n\r\nexport interface LocalStorageWrapperState<TDataType> {\r\n  item: TDataType | undefined;\r\n}\r\n\r\nexport class LocalStorageWrapper<TDataType> extends React.Component<\r\n  LocalStorageWrapperProps<TDataType>,\r\n  LocalStorageWrapperState<TDataType>\r\n> {\r\n  constructor(props: LocalStorageWrapperProps<TDataType>) {\r\n    super(props);\r\n    this.state = {\r\n      item: undefined\r\n    };\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n  async componentDidMount() {\r\n    // check localStorage for obj\r\n    const itemCompressed = await localForage.getItem<string>(\r\n      this.props.storageName\r\n    );\r\n    // decompress\r\n    if (itemCompressed === undefined || itemCompressed === null) {\r\n      this.setState({ item: undefined }, () =>\r\n        this.props.dataDidUpdate(undefined)\r\n      );\r\n      return;\r\n    }\r\n    const item = LZString.decompress(itemCompressed);\r\n    // seems to be some sort of corruption on load.. clear localStorage\r\n    if (item === null) {\r\n      localForage.removeItem(this.props.storageName);\r\n      this.setState({ item: undefined }, () =>\r\n        this.props.dataDidUpdate(undefined)\r\n      );\r\n      return;\r\n    }\r\n    // parse JSON for what was found\r\n    const obj = JSON.parse(item) as TDataType;\r\n    this.setState({ item: obj }, () => this.props.dataDidUpdate(obj));\r\n  }\r\n  componentDidUpdate(\r\n    prevProps: LocalStorageWrapperProps<TDataType>,\r\n    prevState: LocalStorageWrapperState<TDataType>\r\n  ) {\r\n    // if activeItem changed... save to local storage.. update self\r\n    if (!_.isEqual(prevProps.activeItem, this.props.activeItem)) {\r\n      // do a check for undefined and kick out?\r\n      if (this.props.activeItem === undefined) {\r\n        return;\r\n      }\r\n      // TODO: this save should only happen when the data is new\r\n      if (_.isEqual(this.state.item, this.props.activeItem)) {\r\n        // do not need to save or update... it is the same as current state\r\n        // happens when loaded\r\n        return;\r\n      }\r\n      console.log(\"save item\", this.props.activeItem);\r\n      // compress and save\r\n      const strToStore = JSON.stringify(this.props.activeItem);\r\n      const strToStoreCompressed = LZString.compress(strToStore);\r\n      localForage.setItem(this.props.storageName, strToStoreCompressed);\r\n      this.setState({ item: this.props.activeItem }, () =>\r\n        this.props.dataDidUpdate(this.props.activeItem)\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport { HnListSource } from \"./App\";\r\nimport { LocalStorageWrapper } from \"./LocalStorageWrapper\";\r\n\r\ninterface DataLayerState {\r\n  frontItems: HnItem[];\r\n\r\n  dayItems: HnItem[];\r\n\r\n  weekItems: HnItem[];\r\n\r\n  monthItems: HnItem[];\r\n}\r\n\r\ninterface DataLayerProps {\r\n  provideNewItems(items: HnItem[], listType: HnListSource): void;\r\n}\r\n\r\nexport class DataLayer extends React.Component<DataLayerProps, DataLayerState> {\r\n  refreshData(activeList: HnListSource): void {}\r\n  constructor(props: DataLayerProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dayItems: [],\r\n      frontItems: [],\r\n      monthItems: [],\r\n      weekItems: []\r\n    };\r\n  }\r\n\r\n  render() {\r\n    // TODO: generalize the comps and events for the data type (don't duplicate)\r\n    return (\r\n      <React.Fragment>\r\n        <LocalStorageWrapper<HnItem[]>\r\n          dataDidUpdate={item => this.updateNewItems(item, HnListSource.Front)}\r\n          activeItem={this.state.frontItems}\r\n          storageName=\"HN-ITEMS\"\r\n        />\r\n\r\n        <LocalStorageWrapper<HnItem[]>\r\n          dataDidUpdate={item => this.updateNewItems(item, HnListSource.Day)}\r\n          activeItem={this.state.dayItems}\r\n          storageName=\"HN-DAY-ITEMS\"\r\n        />\r\n\r\n        <LocalStorageWrapper<HnItem[]>\r\n          dataDidUpdate={item => this.updateNewItems(item, HnListSource.Week)}\r\n          activeItem={this.state.weekItems}\r\n          storageName=\"HN-WEEK-ITEMS\"\r\n        />\r\n\r\n        <LocalStorageWrapper<HnItem[]>\r\n          dataDidUpdate={item => this.updateNewItems(item, HnListSource.Month)}\r\n          activeItem={this.state.monthItems}\r\n          storageName=\"HN-MONTH-ITEMS\"\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  async getStoryData(id: number) {\r\n    let item = this.state.frontItems.find(c => c.id === id);\r\n    if (item !== undefined) {\r\n      return item;\r\n    }\r\n\r\n    item = this.state.dayItems.find(c => c.id === id);\r\n    if (item !== undefined) {\r\n      return item;\r\n    }\r\n\r\n    item = this.state.weekItems.find(c => c.id === id);\r\n    if (item !== undefined) {\r\n      return item;\r\n    }\r\n\r\n    item = this.state.monthItems.find(c => c.id === id);\r\n    if (item !== undefined) {\r\n      return item;\r\n    }\r\n\r\n    // hit the API for the story data\r\n    return await this.getStoryFromServer(id);\r\n  }\r\n\r\n  public async getStoryFromServer(id: number) {\r\n    let url = \"/api/story/\" + id;\r\n\r\n    const response = await fetch(url);\r\n    if (!response.ok) {\r\n      console.error(response);\r\n      return undefined;\r\n    }\r\n    const data: HnItem | { error: string } = await response.json();\r\n\r\n    if (\"error\" in data) {\r\n      console.error(data);\r\n      return undefined;\r\n    }\r\n\r\n    console.log(\"hn item from server\", data);\r\n\r\n    return data;\r\n  }\r\n\r\n  getPageData(page: string | undefined) {\r\n    // TODO: add loading step if data is missing -- figure out how to trigger refresh\r\n    console.log(\"getpage state\", this.state);\r\n    switch (page) {\r\n      case \"day\":\r\n        if (this.state.dayItems.length === 0) {\r\n          this.loadData(HnListSource.Day);\r\n        }\r\n        return this.state.dayItems || [];\r\n      case \"week\":\r\n        if (this.state.weekItems.length === 0) {\r\n          this.loadData(HnListSource.Week);\r\n        }\r\n        return this.state.weekItems || [];\r\n      case \"month\":\r\n        if (this.state.monthItems.length === 0) {\r\n          this.loadData(HnListSource.Month);\r\n        }\r\n        return this.state.monthItems || [];\r\n      default:\r\n        if (this.state.frontItems.length === 0) {\r\n          this.loadData(HnListSource.Front);\r\n        }\r\n        return this.state.frontItems || [];\r\n    }\r\n  }\r\n\r\n  public async loadData(activeList: HnListSource) {\r\n    console.log(\"loading data\");\r\n    let url = \"\";\r\n    switch (activeList) {\r\n      case HnListSource.Front:\r\n        url = \"/topstories/topstories\";\r\n        break;\r\n      case HnListSource.Day:\r\n        url = \"/topstories/day\";\r\n        break;\r\n      case HnListSource.Week:\r\n        url = \"/topstories/week\";\r\n        break;\r\n      case HnListSource.Month:\r\n        url = \"/topstories/month\";\r\n        break;\r\n    }\r\n    const response = await fetch(url);\r\n    if (!response.ok) {\r\n      console.error(response);\r\n      return;\r\n    }\r\n    const data: HnItem[] = await response.json();\r\n\r\n    // TODO: do not reload data on mount... use a button\r\n\r\n    // TODO: take that list of items and set it equal to the current list\r\n    // TODO: update the items with a merge of sorts instead of overwriting\r\n\r\n    console.log(\"hn items\", data);\r\n\r\n    this.updateNewItems(data, activeList);\r\n  }\r\n\r\n  updateNewItems(data: HnItem[] | undefined, listType: HnListSource): void {\r\n    console.log(\"new items2\", data, listType);\r\n\r\n    if (data === undefined) {\r\n      data = [];\r\n    }\r\n\r\n    switch (listType) {\r\n      case HnListSource.Front:\r\n        this.setState({ frontItems: data });\r\n        break;\r\n      case HnListSource.Day:\r\n        this.setState({ dayItems: data });\r\n        break;\r\n      case HnListSource.Week:\r\n        this.setState({ weekItems: data });\r\n        break;\r\n      case HnListSource.Month:\r\n        this.setState({ monthItems: data });\r\n        break;\r\n    }\r\n\r\n    this.props.provideNewItems(data, listType);\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Nav, Navbar, NavItem, Button, Glyphicon } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ninterface HeaderProps {\r\n  requestNewData(): void;\r\n}\r\n\r\nexport class Header extends React.PureComponent<HeaderProps> {\r\n  render() {\r\n    return (\r\n      <Navbar>\r\n        <Navbar.Header>\r\n          <Navbar.Brand>\r\n            <NavLink to=\"/\">hn-offline</NavLink>\r\n          </Navbar.Brand>\r\n        </Navbar.Header>\r\n        <Nav>\r\n          <LinkContainer to=\"/day\">\r\n            <NavItem eventKey={1}>day</NavItem>\r\n          </LinkContainer>\r\n\r\n          <LinkContainer to=\"/week\">\r\n            <NavItem eventKey={2}>week</NavItem>\r\n          </LinkContainer>\r\n\r\n          <LinkContainer to=\"/month\">\r\n            <NavItem eventKey={3}>month</NavItem>\r\n          </LinkContainer>\r\n        </Nav>\r\n\r\n        <Navbar.Form pullRight>\r\n          <Button bsStyle=\"primary\" onClick={() => this.props.requestNewData()}>\r\n            <Glyphicon glyph=\"refresh\" />\r\n          </Button>\r\n        </Navbar.Form>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n","export function getDomain(url: string | undefined) {\r\n  if (url === undefined) {\r\n    return \"\";\r\n  }\r\n  var matches = url.match(/^https?\\:\\/\\/([^\\/?#]+)(?:[\\/?#]|$)/i);\r\n  var domain = matches && matches[1];\r\n  return domain;\r\n}\r\n","export function timeSince(date: number) {\r\n  var seconds = Math.floor(new Date().getTime() / 1000 - date);\r\n  var interval = Math.floor(seconds / 31536000);\r\n  if (interval > 1) {\r\n    return interval + \" years\";\r\n  }\r\n  interval = Math.floor(seconds / 2592000);\r\n  if (interval > 1) {\r\n    return interval + \" months\";\r\n  }\r\n  interval = Math.floor(seconds / 86400);\r\n  if (interval > 1) {\r\n    return interval + \" days\";\r\n  }\r\n  interval = Math.floor(seconds / 3600);\r\n  if (interval >= 1) {\r\n    return interval + \" hour\" + (interval > 1 ? \"s\" : \"\");\r\n  }\r\n  interval = Math.floor(seconds / 60);\r\n  if (interval > 1) {\r\n    return interval + \" minutes\";\r\n  }\r\n  return Math.floor(seconds) + \" seconds\";\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { getDomain } from \"./getDomain\";\r\nimport { timeSince } from \"./timeSince\";\r\nimport { Glyphicon } from \"react-bootstrap\";\r\n\r\nexport interface HnStoryProps {\r\n  data: HnItem;\r\n}\r\n\r\nexport class HnListItem extends React.Component<HnStoryProps> {\r\n  render() {\r\n    const story = this.props.data;\r\n\r\n    const commentCount = (\r\n      <Link to={\"/story/\" + story.id}>\r\n        <span>\r\n          {\" | \"} <Glyphicon glyph=\"comment\" /> {story.descendants}\r\n        </span>\r\n      </Link>\r\n    );\r\n\r\n    const storyLinkEl =\r\n      story.url === undefined ? (\r\n        <Link to={\"/story/\" + story.id}>{story.title}</Link>\r\n      ) : (\r\n        <a href={story.url}>{story.title}</a>\r\n      );\r\n\r\n    return (\r\n      <div>\r\n        <p>{storyLinkEl}</p>\r\n        <p>\r\n          <span>\r\n            <Glyphicon glyph=\"chevron-up\" /> {\" \" + story.score}\r\n          </span>\r\n          {story.descendants !== undefined && commentCount}\r\n          <span>{\" | \" + timeSince(story.time) + \" ago\"}</span>\r\n          <span>{\" | \" + getDomain(story.url)}</span>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\r\n\r\nimport * as Sentry from \"@sentry/browser\";\r\nimport localForage from \"localforage\";\r\nimport _ from \"lodash\";\r\nimport React, { RefObject } from \"react\";\r\nimport { Route, RouteComponentProps, Switch, withRouter } from \"react-router\";\r\n\r\nimport { DataLayer } from \"./DataLayer\";\r\nimport { Header } from \"./Header\";\r\nimport { HnStoryList } from \"./HnStoryList\";\r\nimport { HnStoryPage } from \"./HnStoryPage\";\r\n\r\ninterface StoryPageProps extends RouteComponentProps<{ id: string }> {}\r\ninterface AppPageProps extends RouteComponentProps<{ page?: string }> {}\r\n\r\nclass _App extends React.Component<AppPageProps, AppState> {\r\n  dataLayer: RefObject<DataLayer>;\r\n\r\n  static getDerivedStateFromProps(props: AppPageProps, state: AppState) {\r\n    let listType: HnListSource;\r\n    switch (props.match.params.page) {\r\n      case \"day\":\r\n        listType = HnListSource.Day;\r\n        break;\r\n\r\n      case \"week\":\r\n        listType = HnListSource.Week;\r\n        break;\r\n\r\n      case \"month\":\r\n        listType = HnListSource.Month;\r\n        break;\r\n\r\n      default:\r\n        listType = HnListSource.Front;\r\n        break;\r\n    }\r\n\r\n    console.log(\"derived state\", props.match.params.page, listType);\r\n\r\n    return { ...state, activeList: listType };\r\n  }\r\n\r\n  constructor(props: AppPageProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: [],\r\n      allItems: [],\r\n      activeList: HnListSource.Front,\r\n      error: undefined\r\n    };\r\n\r\n    this.dataLayer = React.createRef();\r\n\r\n    this.updateActiveDataStore = this.updateActiveDataStore.bind(this);\r\n    this.newItemsProvided = this.newItemsProvided.bind(this);\r\n  }\r\n\r\n  updateActiveDataStore(items: HnItem[], isActive: boolean) {\r\n    if (isActive) {\r\n      this.setState({ items });\r\n    }\r\n\r\n    // this is needed to ensure that state updates are atomic\r\n    // all new items need to be joined together... cannot skip updatesÍ\r\n    this.setState(prevState => {\r\n      let allItems = _.cloneDeep(prevState.allItems).concat(items);\r\n      allItems = _.uniqBy(allItems, c => c.id);\r\n      console.log(\"new all itemS\", allItems);\r\n      return { allItems };\r\n    });\r\n  }\r\n\r\n  componentDidCatch(error: any, errorInfo: any) {\r\n    this.setState({ error });\r\n    Sentry.withScope(scope => {\r\n      Object.keys(errorInfo).forEach(key => {\r\n        scope.setExtra(key, errorInfo[key]);\r\n      });\r\n      Sentry.captureException(error);\r\n    });\r\n\r\n    // clear out all localForage stuff to be save\r\n    localForage.clear();\r\n  }\r\n\r\n  render() {\r\n    console.log(\"render state\", this.state);\r\n\r\n    if (this.state.error !== undefined) {\r\n      return (\r\n        <div>\r\n          <p>an error occurred, refresh the page</p>\r\n          <p>\r\n            unfortunately, your local data was cleared to prevent corruption\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <DataLayer\r\n          ref={this.dataLayer}\r\n          provideNewItems={this.newItemsProvided}\r\n        />\r\n\r\n        <Header\r\n          requestNewData={() => {\r\n            this.dataLayer.current!.loadData(this.state.activeList);\r\n          }}\r\n        />\r\n\r\n        <Switch>\r\n          <Route\r\n            path={\"/story/:id\"}\r\n            exact\r\n            render={(props: StoryPageProps) => (\r\n              <HnStoryPage\r\n                id={+props.match.params.id}\r\n                dataLayer={this.dataLayer.current}\r\n                history={props.history}\r\n                key={+props.match.params.id}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/:page?\"\r\n            render={(props: AppPageProps) => (\r\n              <HnStoryList\r\n                items={\r\n                  this.dataLayer.current === null\r\n                    ? []\r\n                    : this.dataLayer.current.getPageData(\r\n                        props.match.params.page\r\n                      )\r\n                }\r\n              />\r\n            )}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  newItemsProvided(items: HnItem[], listType: HnListSource): void {\r\n    if (listType === this.state.activeList) {\r\n      this.setState({ items });\r\n    }\r\n  }\r\n}\r\n\r\nexport const App = withRouter(_App);\r\n\r\nexport enum HnListSource {\r\n  Front,\r\n  Day,\r\n  Week,\r\n  Month\r\n}\r\n\r\ninterface AppState {\r\n  items: HnItem[];\r\n  allItems: HnItem[];\r\n\r\n  error: any;\r\n\r\n  activeList: HnListSource;\r\n}\r\n","import React from \"react\";\r\n\r\nimport { HnListItem } from \"./HnListItem\";\r\n\r\ninterface HnStoryListProps {\r\n  items: HnItem[];\r\n}\r\n\r\nexport class HnStoryList extends React.Component<HnStoryListProps> {\r\n  constructor(props: HnStoryListProps) {\r\n    super(props);\r\n    this.state = {\r\n      items: []\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.items.map(item => (\r\n          <HnListItem data={item} key={item.id} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport { timeSince } from \"./timeSince\";\r\n\r\nimport classNames from \"classnames\";\r\nimport { HnCommentList } from \"./HnCommentList\";\r\n\r\nexport interface HnCommentProps {\r\n  comment: KidsObj3 | null;\r\n  depth: number;\r\n\r\n  canExpand: boolean;\r\n\r\n  scrollToNextChild(): void;\r\n}\r\n\r\ninterface HnCommentState {\r\n  isOpen: boolean;\r\n  expandSelf: boolean;\r\n}\r\n\r\nconst colors = [\r\n  \"#bc8672\",\r\n  \"#c5be53\",\r\n  \"#d46850\",\r\n  \"#8c7f3b\",\r\n  \"#dec392\",\r\n  \"#c9893a\"\r\n];\r\n\r\nexport class HnComment extends React.Component<HnCommentProps, HnCommentState> {\r\n  divRef: React.RefObject<HTMLDivElement>;\r\n\r\n  constructor(props: HnCommentProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isOpen: true,\r\n      expandSelf: false\r\n    };\r\n\r\n    this.divRef = React.createRef();\r\n  }\r\n\r\n  getDivRef() {\r\n    return this.divRef.current!;\r\n  }\r\n\r\n  render() {\r\n    const comment = this.props.comment;\r\n\r\n    if (comment === null) {\r\n      return null;\r\n    }\r\n\r\n    const childComments = comment.kidsObj || [];\r\n    const commentText = comment.text || \"\";\r\n\r\n    if (\r\n      comment.deleted &&\r\n      (comment.kidsObj === undefined || comment.kidsObj!.length === 0)\r\n    ) {\r\n      // kick out nothing if the comment was deleted and has no children\r\n      return null;\r\n    }\r\n\r\n    // TODO: rewrite links to hn to open in this site instead\r\n\r\n    const childrenToShow = !this.state.isOpen ? null : (\r\n      <React.Fragment>\r\n        <p\r\n          className=\"comment\"\r\n          dangerouslySetInnerHTML={{ __html: commentText }}\r\n        />\r\n\r\n        <HnCommentList\r\n          childComments={childComments}\r\n          canExpand={!this.state.expandSelf}\r\n          depth={this.props.depth}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n\r\n    return (\r\n      <div\r\n        ref={this.divRef}\r\n        className={classNames(\"bp3-card\", { collapsed: !this.state.isOpen })}\r\n        onClick={e => this.handleCardClick(e)}\r\n        style={{\r\n          paddingLeft: 12,\r\n          marginLeft:\r\n            this.state.expandSelf && this.state.isOpen\r\n              ? -15 * (this.props.depth-1)\r\n              : 0,\r\n\r\n          borderLeftColor:\r\n            this.props.depth < colors.length\r\n              ? colors[this.props.depth]\r\n              : \"#bbb\",\r\n\r\n          borderLeftWidth: this.state.expandSelf ? 6 : undefined,\r\n\r\n          borderRight: this.state.expandSelf\r\n            ? \"1px solid\" + colors[this.props.depth]\r\n            : undefined,\r\n          paddingRight: this.state.expandSelf ? 6 : undefined\r\n        }}\r\n      >\r\n        <p style={{ fontWeight: this.state.isOpen ? 450 : 300 }}>\r\n          {comment.by}\r\n          {\" | \"}\r\n          {timeSince(comment.time)}\r\n          {\" ago\"}\r\n        </p>\r\n\r\n        {childrenToShow}\r\n      </div>\r\n    );\r\n  }\r\n  handleCardClick(e: React.MouseEvent<HTMLDivElement>): void {\r\n    // this is to prevent other cards from collapsing too\r\n\r\n    e.stopPropagation();\r\n\r\n    // dont update state if click was A link\r\n    if ((e.target as any).tagName === \"A\") {\r\n      return;\r\n    }\r\n\r\n    const target = e.target as any;\r\n\r\n    // allow some gutter expansion once shifted over\r\n    const gutterRatio = this.state.expandSelf ? 0.85 : 0.9;\r\n\r\n    if (\r\n      this.props.depth > 0 &&\r\n      this.props.canExpand &&\r\n      (e.pageX + target.offsetLeft) / window.innerWidth > gutterRatio\r\n    ) {\r\n      this.setState({ expandSelf: !this.state.expandSelf });\r\n    } else {\r\n      this.setState({ isOpen: !this.state.isOpen }, () =>\r\n        this.props.scrollToNextChild()\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { HnComment } from \"./HnComment\";\r\nimport scrollIntoView from \"scroll-into-view-if-needed\";\r\n\r\ninterface HnCommentListProps {\r\n  childComments: Array<KidsObj3 | null>;\r\n  depth: number;\r\n  canExpand: boolean;\r\n}\r\n\r\nexport class HnCommentList extends React.Component<HnCommentListProps, {}> {\r\n  childRefs: Array<React.RefObject<HnComment>> = [];\r\n  constructor(props: HnCommentListProps) {\r\n    super(props);\r\n    props.childComments.forEach(item => {\r\n      if (item === null) {\r\n        return;\r\n      }\r\n      this.childRefs[item.id] = React.createRef();\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.childComments\r\n          .filter(comm => comm !== null)\r\n          .map((childComm, index) => (\r\n            <HnComment\r\n              key={childComm!.id}\r\n              comment={childComm}\r\n              depth={this.props.depth + 1}\r\n              canExpand={this.props.canExpand}\r\n              ref={this.childRefs[childComm!.id]}\r\n              scrollToNextChild={() => {\r\n                // check if next is real\r\n                // HACK: nothing here is pretty... bouncing around refs to get the DIV to scroll to\r\n                // scroll to self if no siblings around\r\n                const nextSib =\r\n                  this.props.childComments[index + 1] ||\r\n                  this.props.childComments[index];\r\n\r\n                if (nextSib === undefined || nextSib === null) {\r\n                  return;\r\n                }\r\n                const refObj = this.childRefs[nextSib.id].current!;\r\n\r\n                scrollIntoView(refObj.getDivRef(), {\r\n                  behavior: actions =>\r\n                    // list is sorted from innermost (closest parent to your target) to outermost (often the document.body or viewport)\r\n                    actions.forEach(({ el, top, left }) => {\r\n                      // implement the scroll anyway you want\r\n                      window.scrollTo({\r\n                        top: top - 80,\r\n                        behavior: \"smooth\" // Optional, adds animation)\r\n                      });\r\n                    }),\r\n                  block: \"nearest\",\r\n                  inline: \"nearest\",\r\n                  scrollMode: \"if-needed\"\r\n                });\r\n              }}\r\n            />\r\n          ))}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import { History } from \"history\";\r\nimport React from \"react\";\r\n\r\nimport { DataLayer } from \"./DataLayer\";\r\nimport { getDomain } from \"./getDomain\";\r\nimport { HnComment } from \"./HnComment\";\r\nimport { HnCommentList } from \"./HnCommentList\";\r\nimport { timeSince } from \"./timeSince\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface HnStoryPageState {\r\n  data: HnItem | undefined;\r\n}\r\n\r\nexport interface HnStoryPageProps {\r\n  dataLayer: DataLayer | null;\r\n  id: number;\r\n  history: History;\r\n}\r\n\r\nexport class HnStoryPage extends React.Component<\r\n  HnStoryPageProps,\r\n  HnStoryPageState\r\n> {\r\n  constructor(props: HnStoryPageProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: undefined\r\n    };\r\n\r\n    this.anchorClickHandler = this.anchorClickHandler.bind(this);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.data === undefined) {\r\n      return null;\r\n    }\r\n\r\n    const storyData = this.state.data;\r\n\r\n    const storyLinkEl =\r\n      storyData.url === undefined ? (\r\n        <span>{storyData.title}</span>\r\n      ) : (\r\n        <a href={storyData.url}>{storyData.title}</a>\r\n      );\r\n\r\n    const comments = storyData.kidsObj || [];\r\n\r\n    return (\r\n      <div>\r\n        <h2>{storyLinkEl}</h2>\r\n        <h4>\r\n          <span>{storyData.by}</span>\r\n          <span>{\" | \"}</span>\r\n          <span>\r\n            {storyData.score}\r\n            {\" points\"}\r\n          </span>\r\n          <span>{\" | \"}</span>\r\n          <span>{timeSince(storyData.time)} ago</span>\r\n          <span>{\" | \"}</span>\r\n          <span>{getDomain(storyData.url)}</span>\r\n        </h4>\r\n        {storyData.text !== undefined && (\r\n          <p\r\n            className=\"top-text\"\r\n            dangerouslySetInnerHTML={{ __html: storyData.text }}\r\n          />\r\n        )}\r\n\r\n        <HnCommentList childComments={comments} canExpand={true} depth={0} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n\r\n    // set the data initially -- kick off async request if needed\r\n    this.updateDataFromDataLayer();\r\n    document.body.addEventListener(\"click\", this.anchorClickHandler);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.body.removeEventListener(\"click\", this.anchorClickHandler);\r\n  }\r\n  anchorClickHandler(e: any) {\r\n    if (e.target.tagName !== \"A\") {\r\n      return;\r\n    }\r\n\r\n    // have a link\r\n\r\n    const link = e.target as HTMLAnchorElement;\r\n\r\n    const regex = /https?:\\/\\/news\\.ycombinator\\.com\\/item\\?id=(\\d+)/;\r\n    const matches = link.href.match(regex);\r\n\r\n    if (matches === null) {\r\n      return;\r\n    }\r\n\r\n    // this will navigate to the new page\r\n    this.props.history.push(\"/story/\" + matches[1]);\r\n\r\n    e.preventDefault();\r\n    return false;\r\n  }\r\n\r\n  private async updateDataFromDataLayer() {\r\n    const storyData = await this.getStoryData(this.props.id);\r\n\r\n    this.setState({ data: storyData });\r\n  }\r\n\r\n  componentDidUpdate(prevProps: HnStoryPageProps) {\r\n    // load the story once the data layer is available\r\n    if (prevProps.dataLayer === null && this.props.dataLayer !== null) {\r\n      this.updateDataFromDataLayer();\r\n    }\r\n  }\r\n\r\n  private async getStoryData(id: number): Promise<HnItem | undefined> {\r\n    return this.props.dataLayer === null\r\n      ? undefined\r\n      : await this.props.dataLayer.getStoryData(id);\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import \"bootstrap/dist/css/bootstrap-theme.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\n\r\nimport { App } from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport * as Sentry from \"@sentry/browser\";\r\nimport smoothscroll from \"smoothscroll-polyfill\";\r\n\r\n// kick off the polyfill!\r\nsmoothscroll.polyfill();\r\n\r\nSentry.init({\r\n  dsn: \"https://d8e8092157294c86b5014343cede60e6@sentry.io/1362584\"\r\n});\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Route path={\"/:page?\"}>\r\n      <App />\r\n    </Route>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}