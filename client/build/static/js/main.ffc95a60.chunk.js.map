{"version":3,"sources":["LocalStorageWrapper.tsx","DataLayer.tsx","Header.tsx","getDomain.tsx","timeSince.tsx","HnListItem.tsx","HnStoryList.tsx","HnCommentList.tsx","HnComment.tsx","HnStoryPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LocalStorageWrapper","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","item","undefined","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","itemCompressed","obj","_this2","wrap","_context","prev","next","localForage","getItem","storageName","sent","setState","dataDidUpdate","abrupt","LZString","decompress","removeItem","JSON","parse","stop","apply","arguments","prevProps","prevState","_this3","_","isEqual","activeItem","console","log","strToStore","stringify","strToStoreCompressed","compress","setItem","React","Component","DataLayer","allItems","currentLists","activeList","react_default","createElement","Fragment","LocalStorageWrapper_LocalStorageWrapper","updateNewItems","HnListSource","Front","_getStoryData","id","find","c","getStoryFromServer","_x","_getStoryFromServer","_callee2","url","response","data","_context2","fetch","ok","error","json","_x2","page","source","day","Day","week","Week","month","Month","front","idsToLoad","stories","map","filter","_loadData","_callee3","_context3","t0","sortBy","score","_x3","listType","_this4","newList","newDataList","cloneDeep","listToUpdate","push","newAllItems","storiesToReturn","forEach","newStory","existingStoryIndex","findIndex","existingStory","lastUpdated","provideNewItems","Header","_React$PureComponent","Navbar","Brand","NavLink","to","Nav","lib","NavItem","eventKey","Route","render","_ref","location","pathname","indexOf","Form","pullRight","Button","bsStyle","onClick","requestNewData","Glyphicon","glyph","PureComponent","getDomain","matches","match","timeSince","date","seconds","Math","floor","Date","getTime","interval","HnListItem","story","commentCount","Link","descendants","storyLinkEl","title","href","time","HnStoryList","items","HnListItem_HnListItem","HnCommentList","childRefs","childComments","createRef","validChildren","comm","childComm","index","HnComment_HnComment","comment","depth","canExpand","ref","scrollToNextChild","nextSib","meEl","divToScroll","current","getDivRef","actions","computeScrollIntoView","block","inline","scrollMode","divToScrollMe","actionsMe","length","window","scrollTo","top","offsetTop","behavior","colors","HnComment","isOpen","expandSelf","divRef","kidsObj","isValidComment","commentText","text","childrenToShow","className","dangerouslySetInnerHTML","__html","HnCommentList_HnCommentList","borderColor","classNames","collapsed","e","handleCardClick","style","paddingLeft","marginLeft","borderLeftColor","borderLeftWidth","borderRight","paddingRight","fontWeight","by","stopPropagation","target","tagName","gutterRatio","pageX","offsetLeft","innerWidth","deleted","HnStoryPage","anchorClickHandler","bind","assertThisInitialized","storyData","comments","overflowWrap","updateDataFromDataLayer","document","body","addEventListener","removeEventListener","history","preventDefault","_updateDataFromDataLayer","getStoryData","dataLayer","_App","updateActiveDataStore","newItemsProvided","params","objectSpread","isActive","concat","uniqBy","DataLayer_DataLayer","Header_Header","loadData","Switch","es_Route","path","exact","HnStoryPage_HnStoryPage","HnStoryList_HnStoryList","getPageData","App","withRouter","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","smoothscroll","polyfill","Sentry","dsn","onerror","msg","lineNo","columnNo","clear","innerHTML","ReactDOM","BrowserRouter","src_App_App","getElementById","URL","process","origin","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ffc95a60.chunk.js","sourcesContent":["import _ from \"lodash\";\nimport React from \"react\";\nimport LZString from \"lz-string\";\nimport localForage from \"localforage\";\n\nexport interface LocalStorageWrapperProps<TDataType> {\n  storageName: string;\n  activeItem: TDataType;\n\n  dataDidUpdate(item: TDataType | undefined): void;\n}\n\nexport interface LocalStorageWrapperState<TDataType> {\n  item: TDataType | undefined;\n}\n\nexport class LocalStorageWrapper<TDataType> extends React.Component<\n  LocalStorageWrapperProps<TDataType>,\n  LocalStorageWrapperState<TDataType>\n> {\n  constructor(props: LocalStorageWrapperProps<TDataType>) {\n    super(props);\n    this.state = {\n      item: undefined\n    };\n  }\n  render() {\n    return null;\n  }\n  async componentDidMount() {\n    // check localStorage for obj\n    const itemCompressed = await localForage.getItem<string>(\n      this.props.storageName\n    );\n    // decompress\n    if (itemCompressed === undefined || itemCompressed === null) {\n      this.setState({ item: undefined }, () =>\n        this.props.dataDidUpdate(undefined)\n      );\n      return;\n    }\n    const item = LZString.decompress(itemCompressed);\n    // seems to be some sort of corruption on load.. clear localStorage\n    if (item === null) {\n      localForage.removeItem(this.props.storageName);\n      this.setState({ item: undefined }, () =>\n        this.props.dataDidUpdate(undefined)\n      );\n      return;\n    }\n    // parse JSON for what was found\n    const obj = JSON.parse(item) as TDataType;\n    this.setState({ item: obj }, () => this.props.dataDidUpdate(obj));\n  }\n  componentDidUpdate(\n    prevProps: LocalStorageWrapperProps<TDataType>,\n    prevState: LocalStorageWrapperState<TDataType>\n  ) {\n    // if activeItem changed... save to local storage.. update self\n    if (!_.isEqual(prevProps.activeItem, this.props.activeItem)) {\n      // do a check for undefined and kick out?\n      if (this.props.activeItem === undefined) {\n        return;\n      }\n      // TODO: this save should only happen when the data is new\n      if (_.isEqual(this.state.item, this.props.activeItem)) {\n        // do not need to save or update... it is the same as current state\n        // happens when loaded\n        return;\n      }\n      console.log(\"save item\", this.props.activeItem);\n      // compress and save\n      const strToStore = JSON.stringify(this.props.activeItem);\n      const strToStoreCompressed = LZString.compress(strToStore);\n      localForage.setItem(this.props.storageName, strToStoreCompressed);\n      this.setState({ item: this.props.activeItem }, () =>\n        this.props.dataDidUpdate(this.props.activeItem)\n      );\n    }\n  }\n}\n","import _ from \"lodash\";\nimport React from \"react\";\n\nimport { HnListSource } from \"./App\";\nimport { LocalStorageWrapper } from \"./LocalStorageWrapper\";\n\ninterface DataLayerState {\n  allItems: HnItem[];\n\n  currentLists: DataList[];\n}\n\nexport interface DataList {\n  key: HnListSource;\n  stories: number[]; // will be an array of IDs\n}\n\ninterface DataLayerProps {\n  provideNewItems(items: HnItem[], listType: HnListSource): void;\n}\n\nexport class DataLayer extends React.Component<DataLayerProps, DataLayerState> {\n  refreshData(activeList: HnListSource): void {}\n  constructor(props: DataLayerProps) {\n    super(props);\n\n    this.state = {\n      allItems: [],\n      currentLists: []\n    };\n  }\n\n  render() {\n    // TODO: generalize the comps and events for the data type (don't duplicate)\n    return (\n      <React.Fragment>\n        <LocalStorageWrapper<HnItem[]>\n          dataDidUpdate={item => this.updateNewItems(item, HnListSource.Front)}\n          activeItem={this.state.allItems}\n          storageName=\"HN-ALL-ITEMS\"\n        />\n\n        <LocalStorageWrapper<DataList[]>\n          dataDidUpdate={item => console.log(\"item list did update\", item)}\n          activeItem={this.state.currentLists}\n          storageName=\"HN-DATA-LISTS\"\n        />\n      </React.Fragment>\n    );\n  }\n\n  async getStoryData(id: number) {\n    let item = this.state.allItems.find(c => c.id === id);\n    if (item !== undefined) {\n      return item;\n    }\n\n    // hit the API for the story data\n    return await this.getStoryFromServer(id);\n  }\n\n  public async getStoryFromServer(id: number) {\n    let url = \"/api/story/\" + id;\n\n    const response = await fetch(url);\n    if (!response.ok) {\n      console.error(response);\n      return undefined;\n    }\n    const data: HnItem | { error: string } = await response.json();\n\n    if (\"error\" in data) {\n      console.error(data);\n      return undefined;\n    }\n\n    console.log(\"hn item from server\", data);\n\n    return data;\n  }\n\n  getPageData(page: string | undefined) {\n    // TODO: add loading step if data is missing -- figure out how to trigger refresh\n\n    if (page === \"\" || page === undefined) {\n      page = \"front\";\n    }\n\n    const pageToSourceMapping: { [key: string]: HnListSource } = {\n      day: HnListSource.Day,\n      week: HnListSource.Week,\n      month: HnListSource.Month,\n      front: HnListSource.Front\n    };\n\n    const source = pageToSourceMapping[page];\n\n    if (source === undefined) {\n      console.error(\"unknown page -> source map\");\n      return [];\n    }\n\n    const idsToLoad = this.state.currentLists.find(c => c.key === source);\n\n    if (idsToLoad === undefined) {\n      // TODO: this needs to fire off an update\n      console.error(\"bad key given?\");\n      return [];\n    }\n\n    const dataOut = idsToLoad.stories\n      .map(id => this.state.allItems.find(c => c.id === id))\n      .filter(c => c !== undefined) as HnItem[];\n\n    return dataOut;\n  }\n\n  public async loadData(activeList: HnListSource) {\n    console.log(\"loading data\");\n    let url = \"\";\n    switch (activeList) {\n      case HnListSource.Front:\n        url = \"/topstories/topstories\";\n        break;\n      case HnListSource.Day:\n        url = \"/topstories/day\";\n        break;\n      case HnListSource.Week:\n        url = \"/topstories/week\";\n        break;\n      case HnListSource.Month:\n        url = \"/topstories/month\";\n        break;\n    }\n    const response = await fetch(url);\n    if (!response.ok) {\n      console.error(response);\n      return;\n    }\n    let data: HnItem[] = await response.json();\n\n    if (activeList !== HnListSource.Front) {\n      // flip score to get descending\n      data = _.sortBy<HnItem>(data, c => -c.score);\n    }\n\n    // TODO: do not reload data on mount... use a button\n\n    // TODO: take that list of items and set it equal to the current list\n    // TODO: update the items with a merge of sorts instead of overwriting\n\n    console.log(\"hn items\", data);\n\n    this.updateNewItems(data, activeList);\n  }\n\n  updateNewItems(data: HnItem[] | undefined, listType: HnListSource): void {\n    console.log(\"new items2\", data, listType);\n\n    if (data === undefined) {\n      data = [];\n    }\n\n    // replace the list with the new IDs\n    const newList = data.map(c => c.id);\n\n    const newDataList = _.cloneDeep(this.state.currentLists);\n\n    let listToUpdate = newDataList.find(c => c.key === listType);\n\n    if (listToUpdate === undefined) {\n      newDataList.push({\n        key: listType,\n        stories: newList\n      });\n    } else {\n      listToUpdate.stories = newList;\n    }\n\n    // get all items... replace those whose data is newer in this version\n\n    const newAllItems = _.cloneDeep(this.state.allItems);\n\n    const storiesToReturn: HnItem[] = [];\n\n    data.forEach(newStory => {\n      const existingStoryIndex = newAllItems.findIndex(\n        c => c.id === newStory.id\n      );\n\n      // add the story if it is new\n      if (existingStoryIndex === -1) {\n        newAllItems.push(newStory);\n        storiesToReturn.push(newStory);\n        return;\n      }\n\n      // check the data if already found\n      const existingStory = newAllItems[existingStoryIndex];\n      if (existingStory.lastUpdated > newStory.lastUpdated) {\n        storiesToReturn.push(existingStory);\n        return;\n      }\n\n      newAllItems[existingStoryIndex] = newStory;\n      storiesToReturn.push(newStory);\n\n      // new story is actually newer... replace its data\n    });\n\n    // update otherwise\n\n    this.setState({ allItems: newAllItems, currentLists: newDataList }, () => {\n      this.props.provideNewItems(storiesToReturn, listType);\n    });\n  }\n}\n","import React from \"react\";\nimport { Nav, Navbar, NavItem, Button, Glyphicon } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { NavLink, Route } from \"react-router-dom\";\n\ninterface HeaderProps {\n  requestNewData(): void;\n}\n\nexport class Header extends React.PureComponent<HeaderProps> {\n  render() {\n    return (\n      <Navbar>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <NavLink to=\"/\">hn-offline</NavLink>\n          </Navbar.Brand>\n        </Navbar.Header>\n        <Nav>\n          <LinkContainer to=\"/day\">\n            <NavItem eventKey={1}>day</NavItem>\n          </LinkContainer>\n\n          <LinkContainer to=\"/week\">\n            <NavItem eventKey={2}>week</NavItem>\n          </LinkContainer>\n\n          <LinkContainer to=\"/month\">\n            <NavItem eventKey={3}>month</NavItem>\n          </LinkContainer>\n        </Nav>\n\n        <Route\n          render={({ location }) => {\n            return location.pathname.indexOf(\"/story\") === -1 ? (\n              <Navbar.Form pullRight>\n                <Button\n                  bsStyle=\"primary\"\n                  onClick={() => this.props.requestNewData()}\n                >\n                  <Glyphicon glyph=\"refresh\" />\n                </Button>\n              </Navbar.Form>\n            ) : null;\n          }}\n        />\n      </Navbar>\n    );\n  }\n}\n","export function getDomain(url: string | undefined) {\n  if (url === undefined) {\n    return \"\";\n  }\n  var matches = url.match(/^https?\\:\\/\\/([^\\/?#]+)(?:[\\/?#]|$)/i);\n  var domain = matches && matches[1];\n  return domain;\n}\n","export function timeSince(date: number) {\n  var seconds = Math.floor(new Date().getTime() / 1000 - date);\n  var interval = Math.floor(seconds / 31536000);\n  if (interval > 1) {\n    return interval + \" years\";\n  }\n  interval = Math.floor(seconds / 2592000);\n  if (interval > 1) {\n    return interval + \" months\";\n  }\n  interval = Math.floor(seconds / 86400);\n  if (interval > 1) {\n    return interval + \" days\";\n  }\n  interval = Math.floor(seconds / 3600);\n  if (interval >= 1) {\n    return interval + \" hour\" + (interval > 1 ? \"s\" : \"\");\n  }\n  interval = Math.floor(seconds / 60);\n  if (interval > 1) {\n    return interval + \" minutes\";\n  }\n  return Math.floor(seconds) + \" seconds\";\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { getDomain } from \"./getDomain\";\nimport { timeSince } from \"./timeSince\";\nimport { Glyphicon } from \"react-bootstrap\";\n\nexport interface HnStoryProps {\n  data: HnItem;\n}\n\nexport class HnListItem extends React.Component<HnStoryProps> {\n  render() {\n    const story = this.props.data;\n\n    const commentCount = (\n      <React.Fragment>\n        {\" | \"}\n        <Link to={\"/story/\" + story.id}>\n          <Glyphicon glyph=\"comment\" /> {story.descendants}\n        </Link>\n      </React.Fragment>\n    );\n\n    const storyLinkEl =\n      story.url === undefined ? (\n        <Link to={\"/story/\" + story.id}>{story.title}</Link>\n      ) : (\n        <a href={story.url}>{story.title}</a>\n      );\n\n    return (\n      <div>\n        <p>{storyLinkEl}</p>\n        <p>\n          <span>\n            <Glyphicon glyph=\"chevron-up\" /> {\" \" + story.score}\n          </span>\n          {story.descendants !== undefined && commentCount}\n          <span>{\" | \" + timeSince(story.time) + \" ago\"}</span>\n          <span>{\" | \" + getDomain(story.url)}</span>\n        </p>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport { HnListItem } from \"./HnListItem\";\n\ninterface HnStoryListProps {\n  items: HnItem[];\n}\n\nexport class HnStoryList extends React.Component<HnStoryListProps> {\n  constructor(props: HnStoryListProps) {\n    super(props);\n    this.state = {\n      items: []\n    };\n  }\n  render() {\n    return (\n      <div>\n        {this.props.items.map(item => (\n          <HnListItem data={item} key={item.id} />\n        ))}\n      </div>\n    );\n  }\n}\n","import computeScrollIntoView from \"compute-scroll-into-view\";\nimport _ from \"lodash\";\nimport React from \"react\";\n\nimport { HnComment } from \"./HnComment\";\n\ninterface HnCommentListProps {\n  childComments: Array<KidsObj3 | null>;\n  depth: number;\n  canExpand: boolean;\n}\n\nexport class HnCommentList extends React.Component<HnCommentListProps, {}> {\n  childRefs: Array<React.RefObject<HnComment>> = [];\n  constructor(props: HnCommentListProps) {\n    super(props);\n    props.childComments.forEach(item => {\n      if (item === null) {\n        return;\n      }\n      this.childRefs[item.id] = React.createRef();\n    });\n  }\n  render() {\n    const validChildren = this.props.childComments.filter(\n      comm => comm !== null\n    );\n    return (\n      <React.Fragment>\n        {validChildren.map((childComm, index) => (\n          <HnComment\n            key={childComm!.id}\n            comment={childComm}\n            depth={this.props.depth}\n            canExpand={this.props.canExpand}\n            ref={this.childRefs[childComm!.id]}\n            scrollToNextChild={() => {\n              // check if next is real\n              // HACK: nothing here is pretty... bouncing around refs to get the DIV to scroll to\n              // scroll to self if no siblings around\n              let nextSib = validChildren[index + 1];\n              const meEl = validChildren[index];\n\n              if (meEl === null) {\n                return;\n              }\n\n              if (nextSib === undefined || nextSib === null) {\n                nextSib = meEl;\n              }\n\n              const refObj = this.childRefs[nextSib.id].current!;\n              const divToScroll = refObj.getDivRef();\n\n              const actions = computeScrollIntoView(divToScroll, {\n                block: \"nearest\",\n                inline: \"nearest\",\n                scrollMode: \"if-needed\"\n              });\n\n              const refObjMe = this.childRefs[meEl.id].current!;\n              const divToScrollMe = refObjMe.getDivRef();\n\n              const actionsMe = computeScrollIntoView(divToScrollMe, {\n                block: \"nearest\",\n                inline: \"nearest\",\n                scrollMode: \"if-needed\"\n              });\n\n              if (actions.length == 0 && actionsMe.length == 0) {\n                return;\n              }\n\n              // the goal here is to determine if the next sibling or the collapsed header is hidden\n              // if either is not visible, it will scroll to the next sib (or collapsed if no sibs)\n\n              // TODO: consider if this 80 should be less if no siblings\n              window.scrollTo({\n                top: divToScroll.offsetTop - 80,\n                behavior: \"smooth\" // Optional, adds animation)\n              });\n            }}\n          />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n","import classNames from \"classnames\";\nimport React from \"react\";\n\nimport { HnCommentList } from \"./HnCommentList\";\nimport { timeSince } from \"./timeSince\";\n\nexport interface HnCommentProps {\n  comment: KidsObj3 | null;\n  depth: number;\n\n  canExpand: boolean;\n\n  scrollToNextChild(): void;\n}\n\ninterface HnCommentState {\n  isOpen: boolean;\n  expandSelf: boolean;\n}\n\nconst colors = [\n  \"#bc8672\",\n  \"#c5be53\",\n  \"#d46850\",\n  \"#8c7f3b\",\n  \"#dec392\",\n  \"#c9893a\"\n];\n\nexport class HnComment extends React.Component<HnCommentProps, HnCommentState> {\n  divRef: React.RefObject<HTMLDivElement>;\n\n  static getDerivedStateFromProps(\n    props: HnCommentProps,\n    state: HnCommentState\n  ) {\n    // if a parent expands, collapse this one\n    if (!props.canExpand) {\n      return { isOpen: state.isOpen, expandSelf: false };\n    }\n\n    return null;\n  }\n\n  constructor(props: HnCommentProps) {\n    super(props);\n\n    this.state = {\n      isOpen: true,\n      expandSelf: false\n    };\n\n    this.divRef = React.createRef();\n  }\n\n  getDivRef() {\n    return this.divRef.current!;\n  }\n\n  render() {\n    const comment = this.props.comment;\n\n    if (comment === null) {\n      return null;\n    }\n\n    const childComments = (comment.kidsObj || []).filter(isValidComment);\n    const commentText = comment.text || \"\";\n\n    if (!isValidComment(comment)) {\n      // kick out nothing if the comment was deleted and has no children\n      return null;\n    }\n\n    // TODO: rewrite links to hn to open in this site instead\n\n    const childrenToShow = !this.state.isOpen ? null : (\n      <React.Fragment>\n        <p\n          className=\"comment\"\n          dangerouslySetInnerHTML={{ __html: commentText }}\n        />\n\n        {childComments.length > 0 && (\n          <HnCommentList\n            childComments={childComments}\n            canExpand={this.props.canExpand && !this.state.expandSelf}\n            depth={this.props.depth + 1}\n          />\n        )}\n      </React.Fragment>\n    );\n\n    const borderColor =\n      this.props.depth < colors.length ? colors[this.props.depth] : \"#bbb\";\n    return (\n      <div\n        className={classNames(\"bp3-card\", { collapsed: !this.state.isOpen })}\n        onClick={e => this.handleCardClick(e)}\n        style={{\n          paddingLeft: 12,\n          marginLeft:\n            this.state.expandSelf && this.state.isOpen\n              ? -15 * this.props.depth\n              : 0,\n\n          borderLeftColor: borderColor,\n\n          borderLeftWidth: this.state.expandSelf ? 6 : undefined,\n\n          borderRight: this.state.expandSelf\n            ? \"1px solid\" + borderColor\n            : undefined,\n          paddingRight: this.state.expandSelf ? 6 : undefined\n        }}\n      >\n        <p\n          style={{ fontWeight: this.state.isOpen ? 450 : 300 }}\n          ref={this.divRef}\n        >\n          {comment.by}\n          {\" | \"}\n          {timeSince(comment.time)}\n          {\" ago\"}\n        </p>\n\n        {childrenToShow}\n      </div>\n    );\n  }\n  handleCardClick(e: React.MouseEvent<HTMLDivElement>): void {\n    // this is to prevent other cards from collapsing too\n\n    e.stopPropagation();\n\n    // dont update state if click was A link\n    if ((e.target as any).tagName === \"A\") {\n      return;\n    }\n\n    const target = e.target as any;\n\n    // allow some gutter expansion once shifted over\n    const gutterRatio = this.state.expandSelf ? 0.85 : 0.9;\n\n    if (\n      this.props.depth > 0 &&\n      this.props.canExpand &&\n      (e.pageX + target.offsetLeft) / window.innerWidth > gutterRatio\n    ) {\n      this.setState({ expandSelf: !this.state.expandSelf });\n    } else {\n      const isOpen = !this.state.isOpen;\n      this.setState({ isOpen }, () => {\n        if (!isOpen) {\n          this.props.scrollToNextChild();\n        }\n      });\n    }\n  }\n}\n\nexport function isValidComment(comment: KidsObj3 | null) {\n  if (comment === null) {\n    return false;\n  }\n  const isBad =\n    comment.deleted &&\n    (comment.kidsObj === undefined || comment.kidsObj!.length === 0);\n\n  return !isBad;\n}\n","import { History } from \"history\";\nimport React from \"react\";\n\nimport { DataLayer } from \"./DataLayer\";\nimport { getDomain } from \"./getDomain\";\nimport { isValidComment } from \"./HnComment\";\nimport { HnCommentList } from \"./HnCommentList\";\nimport { timeSince } from \"./timeSince\";\n\ninterface HnStoryPageState {\n  data: HnItem | undefined;\n}\n\nexport interface HnStoryPageProps {\n  dataLayer: DataLayer | null;\n  id: number;\n  history: History;\n}\n\nexport class HnStoryPage extends React.Component<\n  HnStoryPageProps,\n  HnStoryPageState\n> {\n  constructor(props: HnStoryPageProps) {\n    super(props);\n\n    this.state = {\n      data: undefined\n    };\n\n    this.anchorClickHandler = this.anchorClickHandler.bind(this);\n  }\n\n  render() {\n    if (this.state.data === undefined) {\n      return null;\n    }\n\n    const storyData = this.state.data;\n\n    const storyLinkEl =\n      storyData.url === undefined ? (\n        <span>{storyData.title}</span>\n      ) : (\n        <a href={storyData.url}>{storyData.title}</a>\n      );\n\n    const comments = (storyData.kidsObj || []).filter(isValidComment);\n\n    return (\n      <div>\n        <h2 style={{ overflowWrap: \"break-word\" }}>{storyLinkEl}</h2>\n        <h4>\n          <span>{storyData.by}</span>\n          <span>{\" | \"}</span>\n          <span>\n            {storyData.score}\n            {\" points\"}\n          </span>\n          <span>{\" | \"}</span>\n          <span>{timeSince(storyData.time)} ago</span>\n          <span>{\" | \"}</span>\n          <span>{getDomain(storyData.url)}</span>\n        </h4>\n        {storyData.text !== undefined && (\n          <p\n            className=\"top-text\"\n            dangerouslySetInnerHTML={{ __html: storyData.text }}\n          />\n        )}\n\n        <HnCommentList childComments={comments} canExpand={true} depth={0} />\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n\n    // set the data initially -- kick off async request if needed\n    this.updateDataFromDataLayer();\n    document.body.addEventListener(\"click\", this.anchorClickHandler);\n  }\n\n  componentWillUnmount() {\n    document.body.removeEventListener(\"click\", this.anchorClickHandler);\n  }\n  anchorClickHandler(e: any) {\n    if (e.target.tagName !== \"A\") {\n      return;\n    }\n\n    // have a link\n\n    const link = e.target as HTMLAnchorElement;\n\n    const regex = /https?:\\/\\/news\\.ycombinator\\.com\\/item\\?id=(\\d+)/;\n    const matches = link.href.match(regex);\n\n    if (matches === null) {\n      return;\n    }\n\n    // this will navigate to the new page\n    this.props.history.push(\"/story/\" + matches[1]);\n\n    e.preventDefault();\n    return false;\n  }\n\n  private async updateDataFromDataLayer() {\n    const storyData = await this.getStoryData(this.props.id);\n\n    this.setState({ data: storyData });\n  }\n\n  componentDidUpdate(prevProps: HnStoryPageProps) {\n    // load the story once the data layer is available\n    if (prevProps.dataLayer === null && this.props.dataLayer !== null) {\n      this.updateDataFromDataLayer();\n    }\n  }\n\n  private async getStoryData(id: number): Promise<HnItem | undefined> {\n    return this.props.dataLayer === null\n      ? undefined\n      : await this.props.dataLayer.getStoryData(id);\n  }\n}\n","import \"./App.css\";\n\nimport _ from \"lodash\";\nimport React, { RefObject } from \"react\";\nimport { Route, RouteComponentProps, Switch, withRouter } from \"react-router\";\n\nimport { DataLayer } from \"./DataLayer\";\nimport { Header } from \"./Header\";\nimport { HnStoryList } from \"./HnStoryList\";\nimport { HnStoryPage } from \"./HnStoryPage\";\n\ninterface StoryPageProps extends RouteComponentProps<{ id: string }> {}\ninterface AppPageProps extends RouteComponentProps<{ page?: string }> {}\n\nclass _App extends React.Component<AppPageProps, AppState> {\n  dataLayer: RefObject<DataLayer>;\n\n  static getDerivedStateFromProps(props: AppPageProps, state: AppState) {\n    let listType: HnListSource;\n    switch (props.match.params.page) {\n      case \"day\":\n        listType = HnListSource.Day;\n        break;\n\n      case \"week\":\n        listType = HnListSource.Week;\n        break;\n\n      case \"month\":\n        listType = HnListSource.Month;\n        break;\n\n      default:\n        listType = HnListSource.Front;\n        break;\n    }\n\n    console.log(\"derived state\", props.match.params.page, listType);\n\n    return { ...state, activeList: listType };\n  }\n\n  constructor(props: AppPageProps) {\n    super(props);\n\n    this.state = {\n      items: [],\n      allItems: [],\n      activeList: HnListSource.Front,\n      error: undefined\n    };\n\n    this.dataLayer = React.createRef();\n\n    this.updateActiveDataStore = this.updateActiveDataStore.bind(this);\n    this.newItemsProvided = this.newItemsProvided.bind(this);\n  }\n\n  updateActiveDataStore(items: HnItem[], isActive: boolean) {\n    if (isActive) {\n      this.setState({ items });\n    }\n\n    // this is needed to ensure that state updates are atomic\n    // all new items need to be joined together... cannot skip updatesÍ\n    this.setState(prevState => {\n      let allItems = _.cloneDeep(prevState.allItems).concat(items);\n      allItems = _.uniqBy(allItems, c => c.id);\n      console.log(\"new all itemS\", allItems);\n      return { allItems };\n    });\n  }\n\n  render() {\n    console.log(\"render state\", this.state);\n\n    if (this.state.error !== undefined) {\n      return (\n        <div>\n          <p>an error occurred, refresh the page</p>\n          <p>\n            unfortunately, your local data was cleared to prevent corruption\n          </p>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <DataLayer\n          ref={this.dataLayer}\n          provideNewItems={this.newItemsProvided}\n        />\n\n        <Header\n          requestNewData={() => {\n            this.dataLayer.current!.loadData(this.state.activeList);\n          }}\n        />\n\n        <Switch>\n          <Route\n            path={\"/story/:id\"}\n            exact\n            render={(props: StoryPageProps) => (\n              <HnStoryPage\n                id={+props.match.params.id}\n                dataLayer={this.dataLayer.current}\n                history={props.history}\n                key={+props.match.params.id}\n              />\n            )}\n          />\n          <Route\n            path=\"/:page?\"\n            render={(props: AppPageProps) => (\n              <HnStoryList\n                items={\n                  this.dataLayer.current === null\n                    ? []\n                    : this.dataLayer.current.getPageData(\n                        props.match.params.page\n                      )\n                }\n              />\n            )}\n          />\n        </Switch>\n      </div>\n    );\n  }\n\n  newItemsProvided(items: HnItem[], listType: HnListSource): void {\n    if (listType === this.state.activeList) {\n      this.setState({ items });\n    }\n  }\n}\n\nexport const App = withRouter(_App);\n\nexport enum HnListSource {\n  Front,\n  Day,\n  Week,\n  Month\n}\n\ninterface AppState {\n  items: HnItem[];\n  allItems: HnItem[];\n\n  error: any;\n\n  activeList: HnListSource;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap-theme.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport * as Sentry from \"@sentry/browser\";\nimport localForage from \"localforage\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport smoothscroll from \"smoothscroll-polyfill\";\n\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// kick off the polyfill!\nsmoothscroll.polyfill();\n\n// TODO: get rid of this call eventually\nSentry.init({\n  dsn: \"https://d8e8092157294c86b5014343cede60e6@sentry.io/1362584\"\n});\n\nwindow.onerror = function(msg, url, lineNo, columnNo, error) {\n  // ... handle error ...\n  console.error(\"major error\", msg);\n  localForage.clear();\n\n  Sentry.captureException(error);\n\n  document.body.innerHTML =\n    \"<h1>major error occurred.  local storage cleared to avoid corruption. please refresh</h1>\";\n};\n\nReactDOM.render(\n  <BrowserRouter>\n    <Route path={\"/:page?\"}>\n      <App />\n    </Route>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}